<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
    	<w2:type>COMPONENT</w2:type>
    	<w2:buildDate />
    	<w2:MSA />
    	<xf:model>
    		<w2:dataCollection baseNode="map">
    			<w2:dataMap baseNode="map" id="dma_login_response">
    				<w2:keyInfo>
    					<w2:key dataType="text" name="간편로그인타입" id="sp_loginType"></w2:key>
    					<w2:key dataType="text" name="간편로그인사용자" id="sp_id"></w2:key>
    					<w2:key dataType="text" name="간단비밀번호" id="sp_pw"></w2:key>
    				</w2:keyInfo>
    			</w2:dataMap>
    		</w2:dataCollection>
    		<w2:workflowCollection />
    		<xf:submission id="sbm_SimpleLogin" action="/InsWebApp/SimpleLogin.pwkjson" method="post" mediatype="application/json" ref='data:json,{"id":"dma_SimpleLogin","key":"elData"}' target='' encoding="UTF-8"
    			instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg="" ev:submit="" ev:submitdone="scwin.sbm_SimpleLogin_submitdone"
    			ev:submiterror="" abortTrigger="">
    		</xf:submission>
    	</xf:model>
    	<w2:layoutInfo />
    	<w2:publicInfo method="" />
    	<script lazy="false" type="text/javascript"><![CDATA[scwin.onpageload = function() {
    scwin.password = "";
    
    // WebSquare에서 세션 데이터 가져오는 방법들
    scwin.currentUserId = null;
    
    console.log("=== 세션 데이터 찾기 시작 ===");
    
    try {
        // 방법 1: WebSquare 세션 접근 시도 (안전하게)
        if (typeof $p !== 'undefined' && $p.getParameter) {
            scwin.currentUserId = $p.getParameter("id");
            console.log("방법1 ($p.getParameter): ", scwin.currentUserId);
        }
        
        // 방법 2: 상위 프레임에서 세션 접근
        if (!scwin.currentUserId && typeof $p !== 'undefined' && $p.top) {
            try {
                scwin.currentUserId = $p.top().scwin.userId || $p.top().scwin.id;
                console.log("방법2 ($p.top): ", scwin.currentUserId);
            } catch (e) {
                console.log("방법2 실패:", e.message);
            }
        }
        
        // 방법 3: 전역 변수에서 확인
        if (!scwin.currentUserId) {
            scwin.currentUserId = window.userId || window.sessionUserId || window.currentUserId || window.id;
            console.log("방법3 (전역변수): ", scwin.currentUserId);
        }
        
        // 방법 4: 로컬 스토리지 확인
        if (!scwin.currentUserId && typeof localStorage !== 'undefined') {
            scwin.currentUserId = localStorage.getItem("userId") || localStorage.getItem("id");
            console.log("방법4 (localStorage): ", scwin.currentUserId);
        }
        
        // 방법 5: 세션 스토리지 확인
        if (!scwin.currentUserId && typeof sessionStorage !== 'undefined') {
            scwin.currentUserId = sessionStorage.getItem("userId") || sessionStorage.getItem("id");
            console.log("방법5 (sessionStorage): ", scwin.currentUserId);
        }
        
        // 방법 6: 쿠키에서 직접 파싱
        if (!scwin.currentUserId && typeof document !== 'undefined' && document.cookie) {
            const cookies = document.cookie.split(';');
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i].trim();
                if (cookie.startsWith('userId=')) {
                    scwin.currentUserId = cookie.substring(7);
                    break;
                } else if (cookie.startsWith('id=')) {
                    scwin.currentUserId = cookie.substring(3);
                    break;
                }
            }
            console.log("방법6 (쿠키): ", scwin.currentUserId);
        }
        
        console.log("=== 최종 찾은 사용자 ID: ", scwin.currentUserId, " ===");
        
    } catch (error) {
        console.error("세션 데이터 가져오기 실패:", error);
    }
    
    // 사용자 ID가 없으면 로그인 화면으로 리다이렉트
    if (!scwin.currentUserId) {
        alert("세션이 만료되었습니다. 다시 로그인해주세요.");
        location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/login/login.xml";
        return;
    }
    
    console.log("최종 사용자 ID:", scwin.currentUserId);
};

scwin.button1_onclick = function (e) {
    scwin.addDigit('1');
};

scwin.button2_onclick = function (e) {
    scwin.addDigit('2');
};

scwin.button3_onclick = function (e) {
    scwin.addDigit('3');
};

scwin.button4_onclick = function (e) {
    scwin.addDigit('4');
};

scwin.button5_onclick = function (e) {
    scwin.addDigit('5');
};

scwin.button6_onclick = function (e) {
    scwin.addDigit('6');
};

scwin.button7_onclick = function (e) {
    scwin.addDigit('7');
};

scwin.button8_onclick = function (e) {
    scwin.addDigit('8');
};

scwin.button9_onclick = function (e) {
    scwin.addDigit('9');
};

scwin.button0_onclick = function (e) {
    scwin.addDigit('0');
};

// 공통 함수
scwin.addDigit = function(digit) {
    if (scwin.password.length < 6) {
        scwin.password += digit;
        scwin.updateCircles();
        
        if (scwin.password.length === 6) {
            console.log("비밀번호 입력 완료:", scwin.password);
            
            // 간편 로그인 검증
            scwin.performSimpleLogin();
        }
    }
};

scwin.performSimpleLogin = function() {
    try {
        // 간편 로그인 데이터 설정
        dma_login_response.set("sp_loginType", "SIMPLE");  // 로그인 타입 설정
        dma_login_response.set("sp_id", scwin.currentUserId);  // 사용자 ID 설정
        dma_login_response.set("sp_pw", scwin.password);   // 간편 비밀번호 설정
        
        let reqData = { "elData": dma_login_response.getJSON() };
        
        console.log("간편 로그인 요청 데이터:", reqData);
        
        // submission 실행 전 검증
        if (typeof sbm_SimpleLogin === 'undefined') {
            console.error("sbm_SimpleLogin이 정의되지 않았습니다.");
            alert("로그인 설정에 오류가 있습니다. 관리자에게 문의하세요.");
            return;
        }
        
        $c.sbm.execute(sbm_SimpleLogin, reqData);
        
    } catch (error) {
        console.error("간편 로그인 요청 실패:", error);
        alert("로그인 처리 중 오류가 발생했습니다.");
        scwin.resetPassword();
    }
};

scwin.updateCircles = function() {
    // 모든 동그라미 초기화
    const circles = ["circle1", "circle2", "circle3", "circle4", "circle5", "circle6"];
    
    circles.forEach(function(circleId) {
        const circle = $p.getComponentById(circleId);
        if (circle) {
            circle.removeClass("filled");
        }
    });
    
    // 입력된 개수만큼 채우기
    for (let i = 0; i < scwin.password.length && i < 6; i++) {
        const circle = $p.getComponentById(circles[i]);
        if (circle) {
            circle.addClass("filled");
        }
    }
};

scwin.resetPassword = function() {
    scwin.password = "";
    scwin.updateCircles();
};

scwin.sbm_SimpleLogin_submitdone = function (e) {
    console.log("간편 로그인 응답 전체:", e);
    console.log("응답 타입:", typeof e);
    
    try {
        let isSuccess = false;
        let responseData = null;
        
        // 응답 데이터 구조 파악
        if (e.responseJSON) {
            responseData = e.responseJSON;
            console.log("responseJSON:", responseData);
        } else if (e.responseText) {
            try {
                responseData = JSON.parse(e.responseText);
                console.log("responseText 파싱:", responseData);
            } catch (parseError) {
                console.log("responseText 파싱 실패:", e.responseText);
            }
        }
        
        // 다양한 응답 구조 체크
        if (responseData) {
            // 방법 1: elHeader 구조
            if (responseData.elHeader && responseData.elHeader.resSuc === true) {
                isSuccess = true;
                console.log("성공 확인 (elHeader)");
            }
            // 방법 2: 직접 success 필드
            else if (responseData.success === true || responseData.resSuc === true) {
                isSuccess = true;
                console.log("성공 확인 (직접 필드)");
            }
            // 방법 3: result 구조
            else if (responseData.result && responseData.result.success === true) {
                isSuccess = true;
                console.log("성공 확인 (result)");
            }
            // 방법 4: data 구조
            else if (responseData.data && responseData.data.success === true) {
                isSuccess = true;
                console.log("성공 확인 (data)");
            }
            // 방법 5: status 체크
            else if (responseData.status === "success" || responseData.status === "ok") {
                isSuccess = true;
                console.log("성공 확인 (status)");
            }
            // 방법 6: code 체크
            else if (responseData.code === "200" || responseData.code === 200) {
                isSuccess = true;
                console.log("성공 확인 (code)");
            }
        }
        
        // HTTP 상태 코드로도 체크
        if (!isSuccess && e.status && (e.status === 200 || e.status === "200")) {
            // 200 상태이면서 에러 메시지가 없으면 성공으로 간주
            if (!responseData || !responseData.error) {
                isSuccess = true;
                console.log("성공 확인 (HTTP 200)");
            }
        }
        
        if (isSuccess) {
            console.log("간편 로그인 성공");
            location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/main/mainWrapper.xml";
        } else {
            console.log("간편 로그인 실패");
            console.log("실패 응답 데이터:", responseData);
            
            dma_login_response.setEmptyValue();
            scwin.resetPassword();
            
            // 에러 메시지 추출
            let errorMessage = "간편 비밀번호가 일치하지 않습니다.";
            if (responseData) {
                if (responseData.message) {
                    errorMessage = responseData.message;
                } else if (responseData.error) {
                    errorMessage = responseData.error;
                } else if (responseData.elHeader && responseData.elHeader.resMsg) {
                    errorMessage = responseData.elHeader.resMsg;
                }
            }
            
            alert(errorMessage);
        }
        
    } catch (error) {
        console.error("응답 처리 중 오류:", error);
        scwin.resetPassword();
        alert("로그인 처리 중 오류가 발생했습니다.");
    }
};

// 에러 처리 함수
scwin.sbm_SimpleLogin_submiterror = function(e) {
    console.error("간편 로그인 서버 오류:", e);
    scwin.resetPassword();
    alert("서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.");
};

// 뒤로가기 버튼 처리
scwin.backButton_onclick = function(e) {
    location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/login/login.xml";
};

// 키패드 초기화 버튼
scwin.clearButton_onclick = function(e) {
    scwin.resetPassword();
};]]></script>
    </head>
    <body ev:onpageload="scwin.onpageload">
    	<xf:group class="sub_contents" id="" meta_snippetCategory="00_화면시작" meta_snippetKeyComponent="true" meta_snippetName="0_01 페이지시작"
    		style="">
    		<xf:group style="height: 100px;" id=""></xf:group>
    		<w2:textbox id="" label="간편 비밀번호" style="height: 30px;text-align:center;font-size:25px;font-weight:bolder;"></w2:textbox>
    		<xf:group style="height: 20px;" id=""></xf:group>
    		<w2:textbox id="" label="6자리 간편 비밀번호를 입력하세요." style="height: 23px;text-align:center;"></w2:textbox>
    		<xf:group style="height: 20px;" id=""></xf:group>
    		<xf:group style="height: 30px;text-align:center;display: flex; justify-content: center;" id="">
    			<xf:group id="" style="width:178px;height:30px;display:flex;gap:5px;justify-content: center;align-items: center;">
    				<w2:textbox style="border-radius:11px;width:20px;height:20px;border-color:#D9D9D9;border-style:solid;" id="circle1" label=""></w2:textbox>
    				<w2:textbox style="border-radius:11px;width:20px;height:20px;border-color:#D9D9D9;border-style:solid;" id="circle2" label=""></w2:textbox>
    				<w2:textbox style="border-radius:11px;width:20px;height:20px;border-color:#D9D9D9;border-style:solid;" id="circle3" label=""></w2:textbox>
    				<w2:textbox style="border-radius:11px;width:20px;height:20px;border-color:#D9D9D9;border-style:solid;" id="circle4" label=""></w2:textbox>
    				<w2:textbox style="border-radius:11px;width:20px;height:20px;border-color:#D9D9D9;border-style:solid;" id="circle5" label=""></w2:textbox>
    				<w2:textbox style="border-radius:11px;width:20px;height:20px;border-color:#D9D9D9;border-style:solid;" id="circle6" label=""></w2:textbox>
    			</xf:group>
    		</xf:group>
    		<xf:group style="height: 50px;" id=""></xf:group>
    		<xf:group class="lybox" id="" meta_snippetCategory="01_화면분할" meta_snippetKeyComponent="true"
    			meta_snippetName="1_03 가변 3단 분할_width값 고정 33per" style="">
    			<xf:group class="" id="" style="display: flex;    justify-content: right;    align-items: center;">
    				<w2:button id="button1"
    					style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;.circle.filled {    background-color: rgba(54, 116, 181, 0.1); /* #3674B5 + 10% 투명도 */    border-color: #3674B5; /* #3674B5 + 100% 투명도 (불투명) */}"
    					label="1" ev:onclick="scwin.button1_onclick">
    				</w2:button>
    			</xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: center;    align-items: center;">
    					<w2:button
    						style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;.button:active {  background-color: rgba(54, 116, 181, 0.1); /* #3674B5 with 10% opacity */  border-color: #3674B5; /* #3674B5 with 100% opacity */}/* 또는 :hover 상태도 원한다면 */ .button:hover {  background-color: rgba(54, 116, 181, 0.05);border-width:1px;"
    						id="button2" label="2" ev:onclick="scwin.button2_onclick">
    					</w2:button>
    				</xf:group>
    			</xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: left;    align-items: center;">
    					<w2:button
    						style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;.button:active {  background-color: rgba(54, 116, 181, 0.1); /* #3674B5 with 10% opacity */  border-color: #3674B5; /* #3674B5 with 100% opacity */}/* 또는 :hover 상태도 원한다면 */ .button:hover {  background-color: rgba(54, 116, 181, 0.05);"
    						id="button3" label="3" ev:onclick="scwin.button3_onclick">
    					</w2:button>
    				</xf:group>
    			</xf:group>
    		</xf:group>
    		<xf:group class="lybox" id="" meta_snippetCategory="01_화면분할" meta_snippetKeyComponent="true"
    			meta_snippetName="1_03 가변 3단 분할_width값 고정 33per" style="">
    			<xf:group class="" id="" style="display: flex;    justify-content: right;    align-items: center;">
    				<w2:button id="button4" label="4"
    					style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;" ev:onclick="scwin.button4_onclick">
    				</w2:button>
    			</xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: center;    align-items: center;">
    					<w2:button id="button5" label="5"
    						style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;" ev:onclick="scwin.button5_onclick">
    					</w2:button>
    				</xf:group>
    			</xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: left;    align-items: center;">
    					<w2:button id="button6" label="6"
    						style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;" ev:onclick="scwin.button6_onclick">
    					</w2:button>
    				</xf:group>
    			</xf:group>
    		</xf:group>
    		<xf:group class="lybox" id="" meta_snippetCategory="01_화면분할" meta_snippetKeyComponent="true"
    			meta_snippetName="1_03 가변 3단 분할_width값 고정 33per" style="">
    			<xf:group class="" id="" style="display: flex;    justify-content: right;    align-items: center;">
    				<w2:button id="button7" label="7"
    					style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;" ev:onclick="scwin.button7_onclick">
    				</w2:button>
    			</xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: center;    align-items: center;">
    					<w2:button id="button8" label="8"
    						style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;" ev:onclick="scwin.button8_onclick">
    					</w2:button>
    				</xf:group>
    			</xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: left;    align-items: center;">
    					<w2:button id="button9" label="9"
    						style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;" ev:onclick="scwin.button9_onclick">
    					</w2:button>
    				</xf:group>
    			</xf:group>
    		</xf:group>
    		<xf:group class="lybox" id="" meta_snippetCategory="01_화면분할" meta_snippetKeyComponent="true"
    			meta_snippetName="1_03 가변 3단 분할_width값 고정 33per" style="">
    			<xf:group class="" id="" style="display: flex;    justify-content: right;    align-items: center;"></xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: center;    align-items: center;">
    					<w2:button id="button0" label="0"
    						style="width:100px;height:100px;border:1px solid #ccc;text-align:center;line-height:90px;box-sizing:border-box;border-radius: 50px;font-size:40px;font-weight:bold;background-color: #F5F8FC;border: 1px solid #D9D9D9;cursor: pointer;transition: all 0.2s ease;" ev:onclick="scwin.button0_onclick">
    					</w2:button>
    				</xf:group>
    			</xf:group>
    			<xf:group class="" id="" style="">
    				<xf:group class="" id="" style="display: flex;    justify-content: left;    align-items: center;"></xf:group>
    			</xf:group>
    		</xf:group>
    		<xf:group style="height: 30px;" id=""></xf:group>
    		<xf:group style="height: 100px;" id="">
    			<xf:group class="lybox" id="" meta_snippetCategory="01_화면분할" meta_snippetKeyComponent="true"
    				meta_snippetName="1_03 가변 3단 분할_width값 고정 33per" style="">
    				<xf:group class="" id="" style=""></xf:group>
    				<xf:group class="" id="" style=""></xf:group>
    				<xf:group class="" id="" style="">
    					<xf:group class="" id="" style="display: flex;    justify-content: center;    align-items: center;">
    						<w2:textbox id="" label="취소"
    							style="width:70px;height:70px;text-align:center;line-height:65px;font-size:20px;">
    						</w2:textbox>
    					</xf:group>
    				</xf:group>
    			</xf:group>
    		</xf:group>
    	</xf:group>
    </body>
</html>

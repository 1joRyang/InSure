<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
        
    <head>
                
        <w2:type>COMPONENT</w2:type>
                
        <w2:buildDate/>
                
        <w2:MSA/>
                
        <xf:model>

        	<w2:dataCollection baseNode="map">
        		<w2:dataMap baseNode="map" id="dma_login_request">
        			<w2:keyInfo>
        				<w2:key dataType="text" name="실무자아이디" id="empNo"></w2:key>
        				<w2:key dataType="text" name="비밀번호" id="empPw"></w2:key>
        				<w2:key dataType="text" name="로그인 타입" id="loginType"></w2:key>
        			</w2:keyInfo>
        		</w2:dataMap>
        		<w2:dataMap baseNode="map" id="dma_login_response">
        			<w2:keyInfo>
        				<w2:key dataType="text" name="실무자아이디" id="empNo"></w2:key>
        			</w2:keyInfo>
        		</w2:dataMap>
        	</w2:dataCollection>

        	<w2:workflowCollection />

        	<xf:submission id="sbm_EmployeeLogin" action="/InsWebApp/EmployeeLogin.pwkjson" method="post" mediatype="application/json" ref='data:json,[{"id":"dma_login_request","key":"elData"},{"id":"dma_login_response","key":"elData"}]' target=""
        		encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg="" ev:submit=""
        		ev:submitdone="scwin.sbm_EmployeeLogin_submitdone" ev:submiterror="" abortTrigger="">
        	</xf:submission>
        </xf:model>

        <w2:layoutInfo/>
                
        <w2:publicInfo method=""/>
                
        <script lazy="false" type="text/javascript"><![CDATA[scwin.onpageload = function() {
	// 1. dma_login_request 데이터맵 초기화
    dma_login_request.set("empNo", "");
    dma_login_request.set("empPw", "");

    // 2. loginType을 'EMPLOYEE'로 미리 설정
    dma_login_request.set("loginType", "EMPLOYEE");

    // 3. 페이지 로드 시 아이디 입력창에 포커스
    ibx_empNo.focus();

     
    // 4. 비밀번호 표시 상태 초기화
    scwin.isPasswordVisible = false;
    scwin.passwordInput = null;
};

/**
 * 로그인 버튼(trigger)을 클릭했을 때 실행되는 함수
 * 입력값 유효성을 검사하고, 서버에 로그인을 요청
 */
scwin.trigger1_login_onclick = function(e) {
    // 데이터맵과 입력필드 강제 동기화
    var actualEmpNo = "";
    var actualEmpPw = "";
    
    // 입력필드에서 실제 값 가져오기
    if (typeof ibx_empNo !== 'undefined' && ibx_empNo.getValue) {
        actualEmpNo = ibx_empNo.getValue();
    }
    if (typeof ibx_empPw !== 'undefined' && ibx_empPw.getValue) {
        actualEmpPw = ibx_empPw.getValue();
    }
    
    // 데이터맵에 강제로 설정
    dma_login_request.set("empNo", actualEmpNo);
    dma_login_request.set("empPw", actualEmpPw);

    // 1. 아이디 입력값 검증
    if (actualEmpNo === "" || actualEmpNo === null) {
        alert("아이디를 입력해주세요.");
        ibx_empNo.focus();
        return;
    }

    // 2. 비밀번호 입력값 검증
    if (actualEmpPw === "" || actualEmpPw === null) {
        alert("비밀번호를 입력해주세요.");
        ibx_empPw.focus(); 
        return;
    }

    // 3. 최종 전송 데이터 확인
    var finalData = dma_login_request.getJSON();
    console.log("최종 전송 데이터:", finalData);

    // 4. 서브미션 실행
    $c.sbm.execute(sbm_EmployeeLogin, finalData);
};

scwin.sbm_EmployeeLogin_submitdone = function (e) {
    
    try {
        console.log("서버 응답:", e); // 디버깅용

        //성공 여부를 응답받은 JSON 데이터의 존재 유무로 직접 확인
        // 서버가 dma_login_response 데이터를 정상적으로 보냈다면 성공으로 간주
        if (e && e.responseJSON && e.responseJSON.dma_login_response) {
            const loginResponse = e.responseJSON.dma_login_response;

             // Employee 객체 생성
             const employee = {
                empNo: loginResponse.empNo,     
                empName: loginResponse.empName,   
                status: loginResponse.empStatus,     
                deptId: loginResponse.deptId, 
                role: loginResponse.role
            };

            // Employee 로그인 시 모든 기존 로그인 정보 삭제
            localStorage.removeItem("user");
            localStorage.removeItem("simple");
            localStorage.setItem("employee", JSON.stringify(employee));
            
            console.log("Employee 로그인 완료, USER/SIMPLE 정보 삭제됨");
            console.log("로컬스토리지에 저장된 employee:", employee);
            

            // 메인 페이지로 이동
            location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/main/mainWrapper.xml";
            
        } else {
            // 로그인 실패 시 처리 - alert 추가
            alert("아이디 또는 비밀번호를 확인해주세요.");
            dma_login_request.set("empPw", "");
            ibx_empPw.focus();
        }
    } catch (error) {
        console.error("로그인 결과 처리 중 오류가 발생했습니다:", error);
        alert("로그인 결과를 처리하는 중 오류가 발생했습니다.");
    }
};

/**
 * Employee 로그인 에러 처리 함수 - alert 추가
 */
scwin.sbm_EmployeeLogin_submiterror = function(e) {
    console.error("Employee 로그인 서브미션 에러:", e);
    alert("아이디 또는 비밀번호를 확인해주세요.");
    dma_login_request.set("empPw", "");
    ibx_empPw.focus();
};



// 로컬스토리지에서 employee 읽기
function getEmployee() {
    try {
        const employeeData = localStorage.getItem("employee");
        return employeeData ? JSON.parse(employeeData) : null;
    } catch (error) {
        console.error("employee 데이터 읽기 실패:", error);
        return null;
    }
}

/**
 * 현재 로그인 상태 확인 함수 (3가지 타입 지원)
 */
function getCurrentLoginType() {
    const user = localStorage.getItem("user");
    const simple = localStorage.getItem("simple");
    const employee = localStorage.getItem("employee");
    
    // 우선순위: EMPLOYEE > SIMPLE > USER
    if (employee) {
        return { type: "EMPLOYEE", data: JSON.parse(employee) };
    } else if (simple) {
        return { 
            type: "SIMPLE", 
            data: JSON.parse(simple), 
            userInfo: user ? JSON.parse(user) : null 
        };
    } else if (user) {
        return { type: "USER", data: JSON.parse(user) };
    } else {
        return { type: "NONE", data: null };
    }
}

/**
 * 로그인 권한 체크
 */
function checkLoginPermission(requiredType) {
    const currentLogin = getCurrentLoginType();
    
    switch (requiredType) {
        case "USER":
            return ["USER", "SIMPLE", "EMPLOYEE"].includes(currentLogin.type);
        case "SIMPLE":
            return ["SIMPLE", "EMPLOYEE"].includes(currentLogin.type);
        case "EMPLOYEE":
            return currentLogin.type === "EMPLOYEE";
        default:
            return false;
    }
}

/**
 * 통합 로그아웃 함수
 */
function logout() {
    const currentLogin = getCurrentLoginType();
    
    // 모든 로그인 정보 삭제
    localStorage.removeItem("user");
    localStorage.removeItem("simple");
    localStorage.removeItem("employee");
    
    console.log("모든 로그인 정보 삭제됨");
    
    // 로그인 타입별 로그아웃 처리
    if (currentLogin.type === "EMPLOYEE") {
        // Employee 로그아웃 후 Employee 로그인 페이지로
        location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/login/login_pc_ver.xml";
    } else {
        // USER/SIMPLE 로그아웃 후 user 로그인 페이지로
        location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/login/insure_login_mobile.xml";
    }
}

/**
 * Employee 권한 체크 (Employee 전용 페이지에서 사용)
 */
function checkEmployeeAuth() {
    const currentLogin = getCurrentLoginType();
    if (currentLogin.type !== "EMPLOYEE") {
        alert("Employee 권한이 필요합니다.");
        location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/login/login_pc_ver.xml";
        return false;
    }
    return true;
}

// 비밀번호 표시 상태와 input 요소를 저장하는 변수
scwin.isPasswordVisible = false;
scwin.passwordInput = null;

/**
 * 비밀번호 보기/숨기기 토글 함수
 */
scwin.anchor_pw_onclick = function () {
    // 처음 클릭 시에만 input 요소 찾기
    if (!scwin.passwordInput) {
        scwin.passwordInput = document.querySelector('.w2inputbox input, .w2input input') ||
                             document.querySelector('input[name*="empPw"], input[name*="password"]') ||
                             document.querySelector('input[type="password"]') ||
                             document.querySelector('input[type="text"]');
    }
    
    if (scwin.passwordInput) {
        scwin.isPasswordVisible = !scwin.isPasswordVisible;
        scwin.passwordInput.type = scwin.isPasswordVisible ? "text" : "password";
        
        setTimeout(function() {
            scwin.passwordInput.focus();
        }, 50);
    }
};


/**
 * 아이디 입력창에서 키 입력 처리
 * 엔터 키를 누르면 비밀번호 입력창으로 포커스 이동
 */
scwin.ibx_empNo_onkeydown = function (e) {
    if (e.keyCode === 13) { // 엔터 키
        e.preventDefault();
        ibx_empPw.focus(); // 비밀번호 입력창으로 포커스 이동
    }
};

/**
 * 비밀번호 입력창에서 키 입력 처리
 * 엔터 키를 누르면 로그인 실행
 */
scwin.ibx_empPw_onkeydown = function (e) {
    if (e.keyCode === 13) { // 엔터 키
        e.preventDefault();
        scwin.trigger1_login_onclick(); // 로그인 함수 실행
    }
};]]></script>
            
    </head>
        
    <body class="" ev:onpageload="scwin.onpageload">

    	<xf:group class="login_wrap" id="" style=";background-image:/InsWebApp/images/ws5/logo/insureLogo.png;">

    		<xf:group class="login_logo" id="" tagname="h1">


    			<xf:image id="" src="/InsWebApp/images/ws5/logo/insureLogo.png" style="width:142px;height:47px;"></xf:image>
    		</xf:group>

    		<xf:group class="login_container" id="" style="left:560px; ">

    			<xf:group class="login_header" id="">

    				<xf:group style="width:360px;height:65px;background-position:center;vertical-align:middle;text-align:center;" id="">
    					<xf:image src="/InsWebApp/images/ws5/logo/insureLogo.png" style="width:142px;height:47px;" id=""></xf:image>
    				</xf:group>
    			</xf:group>
    			<xf:group class="login_contents" id="" style="">

    				<xf:group id="" tagname="ul">

    					<xf:group id="" tagname="li">

    						<w2:textbox class="tit" for="user_id" id="" label="아이디" style="" tagname="label" />

    						<xf:input adjustMaxLength="false" id="ibx_empNo" placeholder="아이디를 입력해주세요." style="" ref="data:dma_login_request.empNo" class="id_ibx" ev:onkeydown="scwin.ibx_empNo_onkeydown"/>

    					</xf:group>

    					<xf:group id="" tagname="li">

    						<w2:textbox class="tit" for="user_pw" id="" label="비밀번호" style="" tagname="label" />

    						<xf:group class="login_form" id="">

    							<xf:input adjustMaxLength="false" id="ibx_empPw" placeholder="비밀번호를 입력해주세요." style="" type="password" ref="data:dma_login_request.empPw" class="pw_ibx" ev:onkeydown="scwin.ibx_empPw_onkeydown"/>

    							<w2:anchor class="btn_login_password" id="anchor_pw" outerDiv="false" style="" ev:onclick="scwin.anchor_pw_onclick">

    								<xf:label><![CDATA[비밀번호 보기]]></xf:label>

    							</w2:anchor>

    						</xf:group>

    						<xf:group class="grp_password" id="">
    							<xf:select appearance="full" cols="" id="" ref="" rows="" selectedindex="-1" style="">

    								<xf:choices>

    									<xf:item>

    										<xf:label><![CDATA[Remember me]]></xf:label>

    										<xf:value />

    									</xf:item>

    								</xf:choices>

    							</xf:select>
    							<w2:anchor class="link_password" id="" outerDiv="false" style="">

    								<xf:label><![CDATA[Forgot password?]]></xf:label>

    							</w2:anchor>
    						</xf:group>
    					</xf:group>

    				</xf:group>

    				<xf:group class="login_btn" id="" style="">

    					<xf:trigger class="btn_login" id="trigger1_login" style="" type="button" ev:onclick="scwin.trigger1_login_onclick">

    						<xf:label><![CDATA[Login]]></xf:label>

    					</xf:trigger>

    				</xf:group>

    				<xf:group class="login_account" id="" style="">

    					<w2:textbox class="" id="" label="New user?" style="" />
    					<w2:anchor class="link_account" id="" outerDiv="false" style="">

    						<xf:label><![CDATA[Create an account]]></xf:label>

    					</w2:anchor>


    				</xf:group>

    			</xf:group>


    		</xf:group>
    	</xf:group>

    	
    </body>

</html>

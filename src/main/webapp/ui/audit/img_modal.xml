<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/InsWebApp/css/img-modal.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <w2:type>COMPONENT</w2:type>
        <w2:buildDate/>
        <w2:MSA/>
        <xf:model>
            <w2:dataCollection baseNode="map">
            	<w2:dataList baseNode="list" repeatNode="map" id="dl_imgList" saveRemovedData="true">
            		<w2:columnInfo>
            			<w2:column dataType="text" name="이미지링크" id="imgSrc"></w2:column>
            			<w2:column dataType="text" name="이미지제목" id="imgTitle"></w2:column>
            		</w2:columnInfo>
            		<w2:data use="true">
            			<w2:row>
            				<imgSrc><![CDATA[/InsWebApp/images/sample/insure/img2.png]]></imgSrc>
            				<imgTitle><![CDATA[1]]></imgTitle>
            			</w2:row>
            			<w2:row>
            				<imgSrc><![CDATA[/InsWebApp/images/sample/insure/test.png]]></imgSrc>
            				<imgTitle><![CDATA[2]]></imgTitle>
            			</w2:row>
            			<w2:row>
            				<imgSrc><![CDATA[/InsWebApp/images/sample/insure/img2.png]]></imgSrc>
            				<imgTitle><![CDATA[1]]></imgTitle>
            			</w2:row>
            			<w2:row>
            				<imgSrc><![CDATA[/InsWebApp/images/sample/insure/test.png]]></imgSrc>
            				<imgTitle><![CDATA[2]]></imgTitle>
            			</w2:row>
            			<w2:row>
            				<imgSrc><![CDATA[/InsWebApp/images/sample/insure/img2.png]]></imgSrc>
            				<imgTitle><![CDATA[1]]></imgTitle>
            			</w2:row>
            			<w2:row>
            				<imgSrc><![CDATA[/InsWebApp/images/sample/insure/test.png]]></imgSrc>
            				<imgTitle><![CDATA[2]]></imgTitle>
            			</w2:row>
            		</w2:data>
            	</w2:dataList>
            </w2:dataCollection>
            <w2:workflowCollection/>
        </xf:model>
        <w2:layoutInfo/>
        <w2:publicInfo method=""/>
        <script lazy="false" type="text/javascript"><![CDATA[scwin.zoomScale = 1;
scwin.currentImgIndex = 1;

scwin.onpageload = function () {
    scwin.renderImageList();
    scwin.renderFullImageViewer();
    scwin.highlightSelectedThumbnail(1);
};

// 썸네일 목록
scwin.renderImageList = function () {
    const len = dl_imgList.getRowCount();
    const targetGrp = $p.getComponentById("imgList");

    for (let i = 1; i < len + 1; i++) {
        const imgInfo = dl_imgList.getRowData(i-1); // [imgSrc, imgTitle]

        const cmpGroup = $p.dynamicCreate("thumb_item_" + i, "group", {
            class: "imgGrp",
            style: "padding: 10px; width: 90%; margin-bottom:6px; display:flex; flex-direction: column; align-items:center;"
        }, targetGrp);

        const imgThumb = $p.dynamicCreate("thumb_img_" + i, "image", {
            src: imgInfo[0],
            alt: i,
            tabindex: "-1",
            style: "width: 90%; cursor: pointer;"
        }, cmpGroup);
        imgThumb.bind("onclick", scwin.onThumbnailClick);

        const imgTitle = $p.dynamicCreate("thumb_txt_" + i, "output", {
            style: "font-size:15px; color:#FFF;"
        }, cmpGroup);
        imgTitle.setValue(imgInfo[1]);
    }
};

// 이미지 뷰어 초기 렌더링 (1개만 표시)
scwin.renderFullImageViewer = function () {
    const container = $p.getComponentById("imgContainer");
    const children = container.getChildren();

    for (let i = 0; i < children.length; i++) {
        const comp = children[i];
        const id = comp.getID?.() || comp.id;
        if (id?.startsWith("viewer_img_")) {
            container.removeChild(comp);
        }
    }

    const len = dl_imgList.getRowCount();
    for (let i = 0; i < len; i++) {
        const row = dl_imgList.getRowData(i);

        const visible = i === 0 ? "block" : "none";
        const img = $p.dynamicCreate("viewer_img_" + i, "image", {
            src: row[0],
            alt: "viewer_img_" + i,
            style: `
                width: 100%;
                max-width: 800px;
                display: ${visible};
                margin: auto;
                object-fit: contain;
            `
        }, container);
    }

    scwin.zoomScale = 1;
    scwin.currentImgIndex = 0;
};

scwin.highlightSelectedThumbnail = function(index) {
    const len = dl_imgList.getRowCount();
    console.log(index)

    for (let i = 1; i < len + 1; i++) {
        const group = $p.getComponentById("thumb_item_" + i);
        if (!group) continue;

        if (i === index) {
            group.addClass("selected-thumb");
        } else {
            group.removeClass("selected-thumb");
        }
    }
};

// 썸네일 클릭 시 해당 이미지만 보이게
scwin.onThumbnailClick = function (e) {
    const index = parseInt(e.target.alt);
    scwin.currentImgIndex = index;
    scwin.zoomScale = 1;
    console.log(scwin.currentImgIndex);
    const container = $p.getComponentById("imgContainer");
    const children = container.getChildren();

    for (let i = 0; i < children.length; i++) {
        const comp = children[i];
        const id = comp.getID?.() || comp.id;

        if (id?.startsWith("mf_viewer_img_")) {
            comp.setStyle("display", i === index ? "block" : "none");
            comp.setStyle("transform", "scale(1)");
        }
    }
    scwin.highlightSelectedThumbnail(index);

    if (e?.target?.blur) e.target.blur();
};

// 줌 조절 함수
scwin.adjustZoom = function (factor) {
    scwin.zoomScale *= factor;

    const container = $p.getComponentById("imgContainer");
    const children = container.getChildren();
    const currentId = "mf_viewer_img_" + (scwin.currentImgIndex - 1);
    console.log(currentId)
    for (let i = 0; i < children.length; i++) {
        const comp = children[i];
        const id = comp.getID?.() || comp.id;

        if (id === currentId) {
            comp.setStyle("transform", "scale(" + scwin.zoomScale + ")");
            comp.setStyle("transform-origin", "top center");
        }
    }
};

// XML에 정의된 버튼 핸들러
scwin.btn_plus_onclick = function (e) {
    scwin.adjustZoom(1.1);
};

scwin.btn_minus_onclick = function (e) {
    scwin.adjustZoom(0.9);
};
]]></script>
    </head>
    <body ev:onpageload="scwin.onpageload" style="">
    	<xf:group meta_snippetCategory="01_화면분할" meta_snippetName="1_05 좌측 고정 2단 분할_width값 200px" meta_snippetKeyComponent="true"
    		style="height: 100%;display: flex;flex-direction: row;overflow: hidden;" id="" class="">
    		<xf:group style="width:10%;background-color:#6E6D6D;height: 100%;overflow-y: scroll;overflow-x: hidden;padding-right: 10px;"
    			id="imgList" class="imgList">
    		</xf:group>
    		<xf:group
    			style="width:90%; height:100%; overflow-y:auto; display:flex; flex-direction:column; align-items:center; padding-top:20px; background-color:gainsboro;"
    			id="imgContainer" class="imgContainer">
    			<xf:image src="" style="" id="img"></xf:image>
    		</xf:group>
    	</xf:group>
    	<xf:group style="position: fixed;bottom: 40px;right: 50px;" id="">
    		<xf:trigger meta_snippetCategory="08_버튼" anchorWithGroupClass="" meta_snippetName="8_02 아이콘조회버튼"
    			ev:onclick="scwin.btn_minus_onclick" meta_snippetKeyComponent="true"
    			style="margin-right: 5px;width: 50px;height: 50px;z-index: 1000;filter: drop-shadow(2px 2px 3px rgba(0, 0, 0, 0.3));" id="btn_minus"
    			type="button" class="btn_cm search icon">
    			<xf:label><![CDATA[search]]></xf:label>
    		</xf:trigger>
    		<xf:trigger meta_snippetCategory="08_버튼" anchorWithGroupClass="" meta_snippetName="8_02 아이콘조회버튼"
    			ev:onclick="scwin.btn_plus_onclick" meta_snippetKeyComponent="true"
    			style="width: 50px;height: 50px;z-index: 1000;filter: drop-shadow(2px 2px 3px rgba(0, 0, 0, 0.3));" id="btn_plus" type="button"
    			class="btn_cm search icon">
    			<xf:label><![CDATA[search]]></xf:label>
    		</xf:trigger>
    	</xf:group>
    </body>
</html>

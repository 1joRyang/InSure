<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <w2:type>COMPONENT</w2:type>
        <w2:buildDate/>
        <w2:MSA/>
        <xf:model>
        	<w2:dataCollection baseNode="map">
        		<w2:dataMap baseNode="map" id="dma_claimNo">
        			<w2:keyInfo>
        				<w2:key dataType="text" name="claim_no" id="claim_no"></w2:key>
        			</w2:keyInfo>
        		</w2:dataMap>
        		<w2:dataMap baseNode="map" id="dma_additionalReq">
        			<w2:keyInfo>
        				<w2:key dataType="text" name="claim_no" id="claim_no"></w2:key>
        				<w2:key dataType="text" name="additional_memo" id="additional_memo"></w2:key>
        				<w2:key dataType="text" name="request_type" id="request_type"></w2:key>
        			</w2:keyInfo>
        		</w2:dataMap>
        	</w2:dataCollection>
        	<w2:workflowCollection />
        	
        	<!-- 존재 여부 확인 submission -->
        	<xf:submission id="sbm_checkAdditionalReq" action="/InsWebApp/ADDITIONALREQCheck.pwkjson" method="post"
        		mediatype="application/json" ref='data:json,{"id":"dma_claimNo","key":"additionalReqVo"}' 
        		target="" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler=""
        		mode="asynchronous" processMsg="확인중입니다..." 
        		ev:submit="" ev:submitdone="scwin.sbm_checkAdditionalReq_submitdone" 
        		ev:submiterror="scwin.sbm_checkAdditionalReq_submiterror" abortTrigger="">
        	</xf:submission>
        	
        	<!-- INSERT 전용 submission -->
        	<xf:submission id="sbm_insertAdditionalReq" action="/InsWebApp/ADDITIONALREQInsertOnly.pwkjson" method="post"
        		mediatype="application/json" ref='data:json,{"id":"dma_additionalReq","key":"additionalReqVo"}' 
        		target="" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler=""
        		mode="asynchronous" processMsg="등록중입니다..." 
        		ev:submit="" ev:submitdone="scwin.sbm_insertAdditionalReq_submitdone" 
        		ev:submiterror="scwin.sbm_insertAdditionalReq_submiterror" abortTrigger="">
        	</xf:submission>
        	
        	<!-- UPDATE 전용 submission -->
        	<xf:submission id="sbm_updateAdditionalReq" action="/InsWebApp/ADDITIONALREQUpdateOnly.pwkjson" method="post"
        		mediatype="application/json" ref='data:json,{"id":"dma_additionalReq","key":"additionalReqVo"}' 
        		target="" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler=""
        		mode="asynchronous" processMsg="수정중입니다..." 
        		ev:submit="" ev:submitdone="scwin.sbm_updateAdditionalReq_submitdone" 
        		ev:submiterror="scwin.sbm_updateAdditionalReq_submiterror" abortTrigger="">
        	</xf:submission>
        	
        	<!-- 기존 submission (호환성 유지) -->
        	<xf:submission id="sbm_insertAdditionalReqOld" action="/InsWebApp/ADDITIONALREQInsUp.pwkjson" method="post"
        		mediatype="application/json" ref='data:json,{"id":"dma_additionalReq","key":"additionalReqCusVo"}' 
        		target="" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler=""
        		mode="asynchronous" processMsg="처리중입니다..." 
        		ev:submit="" ev:submitdone="scwin.sbm_insertAdditionalReqOld_submitdone" 
        		ev:submiterror="scwin.sbm_insertAdditionalReqOld_submiterror" abortTrigger="">
        	</xf:submission>
        </xf:model>
        <w2:layoutInfo/>
        <w2:publicInfo method=""/>
        <script cache="false" scopeExternal="false" src="/InsWebApp/js/insure/sweet-alert.js" scopeVariable="" type="text/javascript"></script>
        <script lazy="false" type="text/javascript"><![CDATA[
scwin.onpageload = function () {
    scwin.claim = JSON.parse(localStorage.getItem("claim"));

    txt_req_supple.setValue(scwin.claim.claimNo);
    dma_additionalReq.set("claim_no", scwin.claim.claimNo);
    dma_claimNo.set("claim_no", scwin.claim.claimNo);
};

// 확인 버튼 클릭 - 존재 여부 확인 후 분기
scwin.btn_submit_onclick = function (e) {
    // textarea 값 검증
    var additionalMemo = txa_supplement_memo.getValue();
    if (!additionalMemo || additionalMemo.trim() === "") {
        $p.closePopup();
        scwin.toastAlert({
            icon: 'warning',
            title: '보완 요청 사유를 입력해주세요.'
        });
        txa_supplement_memo.focus();
        return false;
    }

    dma_additionalReq.set("additional_memo", additionalMemo.trim());
    dma_additionalReq.set("request_type", "SUPPLEMENT"); // 보완요청 타입 설정

    console.log("존재 여부 확인 중...");
    console.log("CLAIM_NO:", dma_claimNo.get("claim_no"));

    $p.executeSubmission("sbm_checkAdditionalReq");
};

// 닫기 버튼 클릭
scwin.btn_close_onclick = function (e) {
    $p.closePopup();
    return true;
};


scwin.sbm_checkAdditionalReq_submitdone = function (e) {
    var result = e.responseJSON;

    console.log("확인 결과:", result);

    if (result && result.success) {
        if (result.exists) {
            // 기존 데이터가 있으면 UPDATE
            $p.executeSubmission("sbm_updateAdditionalReq");
        } else {
            // 기존 데이터가 없으면 INSERT
            $p.executeSubmission("sbm_insertAdditionalReq");
        }
    } else {
        scwin.toastAlert({
            icon: 'error',
            title: '데이터 확인 중 오류가 발생했습니다.'
        });
    }
};

scwin.sbm_checkAdditionalReq_submiterror = function (e) {
    console.log("확인 중 에러:", e);
    scwin.toastAlert({
        icon: 'error',
        title: '데이터 확인 중 오류가 발생했습니다.'
    });
    return false;
};


scwin.sbm_insertAdditionalReq_submitdone = function (e) {
    var result = e.responseJSON;
    console.log("INSERT 결과:", result);

    if (result && result.success) {
        $p.closePopup();
        scwin.noBtnAlertWithTimer({
            icon: 'success',
            title: '보완 요청이 등록되었습니다.'
        });
        setTimeout(function () {
            location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/web/webWrapper.xml";
        }, 2000);
    } else {
        scwin.toastAlert({
            icon: 'error',
            title: result.message || '등록 중 오류가 발생했습니다.'
        });
    }
    return true;
};

scwin.sbm_insertAdditionalReq_submiterror = function (e) {
    console.log("등록 중 에러:", e);
    scwin.toastAlert({
        icon: 'error',
        title: '등록 중 오류가 발생했습니다.'
    });
    return false;
};


scwin.sbm_updateAdditionalReq_submitdone = function (e) {
    var result = e.responseJSON;
    console.log("UPDATE 결과:", result);

    if (result && result.success) {
        $p.closePopup();
        scwin.noBtnAlertWithTimer({
            icon: 'success',
            title: '보완 요청이 수정되었습니다.'
        });

        setTimeout(function () {
            location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/webWrapper.xml";
        }, 2000);
    } else {
        scwin.toastAlert({
            icon: 'error',
            title: result.message || '수정 중 오류가 발생했습니다.'
        });
    }
    return true;
};

scwin.sbm_updateAdditionalReq_submiterror = function (e) {
    scwin.toastAlert({
        icon: 'error',
        title: '수정 중 오류가 발생했습니다.'
    });
    return false;
};


scwin.sbm_insertAdditionalReqOld_submitdone = function (e) {
    $p.closePopup();
    scwin.noBtnAlertWithTimer({
        icon: 'success',
        title: '보완 요청 완료'
    });
    setTimeout(function () {
        location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/webWrapper.xml";
    }, 2000);
    return true;
};

scwin.sbm_insertAdditionalReqOld_submiterror = function (e) {

    var errorMsg = "보완요청 전송 중 오류가 발생했습니다.";
    if (e.responseJSON && e.responseJSON.elHeader && e.responseJSON.elHeader.resMsg) {
        errorMsg = e.responseJSON.elHeader.resMsg;
    }
    console.log(errorMsg);
};


// 팝업 닫기 및 페이지 이동
scwin.closeAndRedirect = function () {
    $p.closePopup();
    location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/webWrapper.xml";
};
const Toast = Swal.mixin({
    toast: true,
    showConfirmButton: false,
})

scwin.toastAlertMobile = (param) => {
    Toast.fire({
        ...param,
        timer: 2000,
        position: 'center',
        timerProgressBar: false,
    });
}

scwin.toastAlert = (param) => {
    Toast.fire({
        ...param,
        timer: 3000,
        position: 'top-end',
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });
}

scwin.noBtnAlert = (param) => {
    Swal.fire({
        ...param,
        showConfirmButton: false,
    });
}

scwin.noBtnAlertWithTimer = (param) => {
    Swal.fire({
        ...param,
        timer: 2000,
        showConfirmButton: false,
    });
}

scwin.twoBtnAlert = (param, func) => {
    Swal.fire({
        ...param,
        showCancelButton: true,
        confirmButtonColor: '#4FACFE',
        cancelButtonColor: '#d1d1d1',
        confirmButtonText: '완료',
        cancelButtonText: '취소',
        reverseButtons: true
    }).then(func);
}
]]></script>
    </head>
    <body ev:onpageload="scwin.onpageload">
        <xf:group class="sub_contents" id="" meta_snippetCategory="00_화면시작" meta_snippetKeyComponent="true" meta_snippetName="0_01 페이지시작"
            style="">
            <xf:group id="">
                <w2:span id="" label="청구 번호 : " meta_snippetCategory="10_입력폼" meta_snippetKeyComponent="true"
                    meta_snippetName="10_16 출력텍스트" style="">
                </w2:span>
                <w2:span meta_snippetCategory="10_입력폼" meta_snippetName="10_16 출력텍스트" meta_snippetKeyComponent="true" style=""
                    id="txt_req_supple" label="출력텍스트입니다. ">
                </w2:span>
            </xf:group>
            <xf:textarea class="" id="txa_supplement_memo" meta_snippetCategory="10_입력폼" meta_snippetKeyComponent="true"
                meta_snippetName="10_09 Textarea_100per" placeholder="보완 요청을 작성 해주세요" style="width:100%;height: 250px;">
            </xf:textarea>
            <xf:group class="btnbox" id="" meta_snippetCategory="08_버튼" meta_snippetKeyComponent="true" meta_snippetName="8_05 팝업전체제어버튼"
                style="margin-top: 10px;">
                <xf:group class="rt" id="" style="">
                    <xf:trigger class="btn_cm " id="btn_close" ev:onclick="scwin.btn_close_onclick" style="" type="button">
                        <xf:label><![CDATA[닫기]]></xf:label>
                    </xf:trigger>
                    <xf:trigger class="btn_cm pt" id="btn_submit" ev:onclick="scwin.btn_submit_onclick" style="" type="button">
                        <xf:label><![CDATA[확인]]></xf:label>
                    </xf:trigger>
                </xf:group>
            </xf:group>
        </xf:group>
    </body>
</html>
<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map">
				<w2:dataMap baseNode="map" id="dmp_assignRuleVo" style="">
					<w2:keyInfo>
						<w2:key dataType="text" id="pageIndex" name="페이지번호" defaultValue="1"></w2:key>
						<w2:key dataType="text" id="pageSize" name="페이지사이즈" defaultValue="10"></w2:key>
						<w2:key dataType="text" id="totalPageCount" name="페이지건수"></w2:key>
					</w2:keyInfo>
					<w2:data use="false"></w2:data>
				</w2:dataMap>
				<w2:dataList baseNode="list" id="dlt_assignRuleVoList" repeatNode="map" saveRemovedData="true" style="">
					<w2:columnInfo>
						<w2:column dataType="text" id="rule_id" name="rule_id"></w2:column>
                        <w2:column dataType="text" id="keyword" name="keyword"></w2:column>
                        <w2:column dataType="text" id="dept" name="dept"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataMap baseNode="map" id="dmp_assignRuleVoDetail" style="">
					<w2:keyInfo>
						<w2:key dataType="text" id="rule_id" name="rule_id"></w2:key>
                        <w2:key dataType="text" id="keyword" name="keyword"></w2:key>
                        <w2:key dataType="text" id="dept" name="dept"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
				<!-- 자동 배정 설정 데이터 -->
				<w2:dataMap baseNode="map" id="dmp_autoAssignConfig" style="">
					<w2:keyInfo>
						<w2:key dataType="text" id="autoAssignEnabled" name="자동배정활성화" defaultValue="false"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
			</w2:dataCollection>
			<w2:workflowCollection></w2:workflowCollection>

			<!-- 기존 submission들 -->
			<xf:submission id="sbm_selectAssignRuleVoList" ref='data:json,{"id":"dmp_assignRuleVo","key":"assignRuleVo"}'
				target='data:json,{"id":"dlt_assignRuleVoList","key":"elData.assignRuleVoList"}' action="/InsWebApp/assignrule0001List.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
				processMsg="배정규칙 리스트를 조회 중입니다." ev:submit="" ev:submitdone="scwin.sbm_assignRuleList_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
			<xf:submission id="sbm_deleteAssignRuleVo" ref='data:json,{"id":"dmp_assignRuleVoDetail","key":"assignRuleVo"}' target="" action="/InsWebApp/assignrule0001Del.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg=""
				ev:submit="" ev:submitdone="scwin.sbm_deleteAssignRuleVo_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
			<xf:submission id="sbm_updateAssignRuleVo" ref='data:json,["dmp_assignRuleVoDetail",{"id":"dmp_assignRuleVoDetail","key":"assignRuleVo"}]' target="" action="/InsWebApp/assignrule0001Upd.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg=""
				ev:submit="" ev:submitdone="scwin.sbm_updateAssignRuleVo_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
			<xf:submission id="sbm_insertAssignRuleVo" ref='data:json,["dmp_assignRuleVoDetail",{"id":"dmp_assignRuleVoDetail","key":"assignRuleVo"}]' target="" action="/InsWebApp/assignrule0001Ins.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg=""
				ev:submit="" ev:submitdone="scwin.sbm_insertAssignRuleVo_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
			<xf:submission id="sbm_selectAssignRuleVo" ref="" target="" action="/InsWebApp/assignrule0001UpdView.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
				processMsg="배정규칙를 조회 중입니다." ev:submit="" ev:submitdone="scwin.sbm_selectAssignRuleVo_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
			
			<!-- 자동 배정 설정 관련 submission들 -->
			<xf:submission id="sbm_updateAutoAssignConfig" ref='data:json,{"id":"dmp_autoAssignConfig","key":"autoAssignConfig"}' target="" action="/InsWebApp/assignrule0007UpdateAutoConfig.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
				processMsg="자동 배정 설정을 업데이트 중입니다." ev:submit="" ev:submitdone="scwin.sbm_updateAutoAssignConfig_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
			<xf:submission id="sbm_getAutoAssignConfig" ref='data:json,{}' target='data:json,{"id":"dmp_autoAssignConfig","key":"elData.autoAssignConfig"}' action="/InsWebApp/assignrule0008GetAutoConfig.pwkjson" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
				processMsg="자동 배정 설정을 조회 중입니다." ev:submit="" ev:submitdone="scwin.sbm_getAutoAssignConfig_submitdone" ev:submiterror="" abortTrigger="">
			</xf:submission>
		</xf:model>
		<w2:layoutInfo></w2:layoutInfo>
		<w2:publicInfo method="" />
		<script lazy="false" type="text/javascript"><![CDATA[
/**
 * 배정 규칙 관리 시스템
 * 자동 배정 규칙의 CRUD 기능과 자동/수동 모드 설정을 관리하는 모듈
 * 
 * 주요 기능:
 * - 자동 배정 모드 설정 (자동/수동 토글)
 * - 배정 규칙 등록, 수정, 삭제, 조회
 * - 페이징 처리 및 그리드 관리
 * - 폼 데이터 유효성 검증
 */

// =============================================================================
// 상수 및 설정값 정의
// =============================================================================
const ASSIGN_RULE_CONFIG = {
    PAGE_SIZE: 10,                    // 기본 페이지 크기
    PAGE_NAVIGATOR_SIZE: 5,           // 페이지 네비게이터 크기
    GRID_HEIGHT: 150,                 // 그리드 높이
    GRID_VISIBLE_ROWS: 10,            // 그리드 표시 행 수
    DEFAULT_PAGE_INDEX: 1             // 기본 페이지 번호
};

const ASSIGN_RULE_MESSAGES = {
    AUTO_MODE: "자동",
    MANUAL_MODE: "수동",
    REGISTER_MODE: "등록",
    EDIT_MODE: "수정",
    CONFIRM_SAVE: "저장하시겠습니까?",
    CONFIRM_UPDATE: "수정하시겠습니까?",
    CONFIRM_DELETE: "삭제하시겠습니까?",
    CONFIRM_MODE_CHANGE: "자동 배정 모드를 '{mode}'으로 변경하시겠습니까?",
    SUCCESS_REGISTER: "등록되었습니다.",
    SUCCESS_UPDATE: "수정되었습니다.",
    SUCCESS_DELETE: "삭제되었습니다.",
    SUCCESS_CONFIG_UPDATE: "자동 배정 설정이 변경되었습니다.",
    ERROR_TEMPLATE: "에러코드: {code}\n에러메시지: {message}"
};

const UI_ELEMENTS = {
    BUTTONS: {
        SAVE: "btn_save",
        EDIT: "btn_edit", 
        DELETE: "btn_delete",
        RESET: "btn_reset",
        SEARCH: "btn_search",
        TOGGLE_AUTO_ASSIGN: "btn_toggleAutoAssign"
    },
    COMPONENTS: {
        SEARCH_BOX: "search_box",
        GRID: "grd_list",
        PAGE_LIST: "pgl_assignRuleList",
        RULE_INFO_GROUP: "grp_assignRuleInfo",
        AUTO_ASSIGN_MODE_SPAN: "spn_autoAssignMode",
        LIST_COUNT_SPAN: "spn_listCnt",
        REGISTER_FLAG_SPAN: "spn_registerFlag",
        PAGE_INDEX_SPAN: "spn_pageIndex", 
        TOTAL_PAGE_COUNT_SPAN: "spn_totalPageCount"
    }
};

const CSS_CLASSES = {
    STATUS_AUTO: "status-auto",
    STATUS_MANUAL: "status-manual"
};

// =============================================================================
// 페이지 초기화 및 기본 설정
// =============================================================================

/**
 * 페이지 로드 완료 시 실행되는 메인 초기화 함수
 * UI 초기화, 자동 배정 설정 로드, 규칙 목록 조회 순으로 진행
 */
scwin.onpageload = function() {
    try {
        initializePageUI();
        scwin.loadAutoAssignConfig();
        scwin.searchAssignRules();
    } catch (error) {
        console.error("페이지 초기화 중 오류:", error);
        alert("페이지 초기화 중 오류가 발생했습니다.");
    }
};

/**
 * 페이지 UI 초기 설정
 * 버튼 표시/숨김 및 검색박스 처리
 */
function initializePageUI() {
    // 초기 버튼 상태 설정 (등록 모드)
    setButtonVisibility(true, false, false); // save=true, edit=false, delete=false
    
    // 검색 컴포넌트가 없으면 검색박스 숨김
    hideSearchBoxIfNeeded();
}

/**
 * 버튼 표시/숨김 상태 설정
 * @param {boolean} showSave - 저장 버튼 표시 여부
 * @param {boolean} showEdit - 수정 버튼 표시 여부  
 * @param {boolean} showDelete - 삭제 버튼 표시 여부
 */
function setButtonVisibility(showSave, showEdit, showDelete) {
    const saveBtn = $p.getComponentById(UI_ELEMENTS.BUTTONS.SAVE);
    const editBtn = $p.getComponentById(UI_ELEMENTS.BUTTONS.EDIT);
    const deleteBtn = $p.getComponentById(UI_ELEMENTS.BUTTONS.DELETE);
    
    if (saveBtn) showSave ? saveBtn.show("") : saveBtn.hide();
    if (editBtn) showEdit ? editBtn.show("") : editBtn.hide();
    if (deleteBtn) showDelete ? deleteBtn.show("") : deleteBtn.hide();
}

/**
 * 검색 컴포넌트가 없으면 검색박스 숨김 처리
 */
function hideSearchBoxIfNeeded() {
    const searchComp = $p.getComponentById("searchComp_1");
    const searchBox = $p.getComponentById(UI_ELEMENTS.COMPONENTS.SEARCH_BOX);
    
    if (!searchComp && searchBox) {
        searchBox.hide();
    }
}

// =============================================================================
// 자동 배정 설정 관리
// =============================================================================

/**
 * 자동 배정 설정 로드
 * 서버에서 현재 자동 배정 모드 설정을 조회
 */
scwin.loadAutoAssignConfig = function() {
    $c.sbm.execute($p, sbm_getAutoAssignConfig);
};

/**
 * 자동 배정 설정 조회 완료 콜백
 * 서버 응답에 따라 UI 상태 업데이트
 */
scwin.sbm_getAutoAssignConfig_submitdone = function(e) {
    const { elData, elHeader } = e.responseJSON;
    
    // 조회 실패 시 기본값(수동 모드)으로 설정
    if (!isValidResponse(elHeader)) {
        setDefaultAutoAssignConfig();
    }
    
    // UI 상태 업데이트
    scwin.updateAutoAssignUI();
};

/**
 * 자동 배정 설정 기본값 설정
 * 조회 실패 시 수동 모드로 초기화
 */
function setDefaultAutoAssignConfig() {
    dmp_autoAssignConfig.set("autoAssignEnabled", "false");
}

/**
 * 자동 배정 UI 상태 업데이트
 * 현재 모드에 따라 스타일과 텍스트 변경
 */
scwin.updateAutoAssignUI = function() {
    const isAutoEnabled = dmp_autoAssignConfig.get("autoAssignEnabled") === "true";
    const modeSpan = $p.getComponentById(UI_ELEMENTS.COMPONENTS.AUTO_ASSIGN_MODE_SPAN);
    
    if (modeSpan) {
        updateModeDisplay(modeSpan, isAutoEnabled);
    }
};

/**
 * 모드 표시 업데이트
 * @param {Object} modeSpan - 모드 표시 컴포넌트
 * @param {boolean} isAutoEnabled - 자동 모드 활성화 여부
 */
function updateModeDisplay(modeSpan, isAutoEnabled) {
    if (isAutoEnabled) {
        modeSpan.setValue(ASSIGN_RULE_MESSAGES.AUTO_MODE);
        modeSpan.removeClass(CSS_CLASSES.STATUS_MANUAL);
        modeSpan.addClass(CSS_CLASSES.STATUS_AUTO);
    } else {
        modeSpan.setValue(ASSIGN_RULE_MESSAGES.MANUAL_MODE);
        modeSpan.removeClass(CSS_CLASSES.STATUS_AUTO);
        modeSpan.addClass(CSS_CLASSES.STATUS_MANUAL);
    }
}

/**
 * 자동 배정 모드 토글 버튼 클릭 이벤트
 * 현재 모드를 반대로 변경하고 확인 메시지 표시
 */
scwin.btn_toggleAutoAssign_onclick = function(e) {
    const currentMode = dmp_autoAssignConfig.get("autoAssignEnabled");
    const newMode = (currentMode === "true") ? "false" : "true";
    const modeText = (newMode === "true") ? ASSIGN_RULE_MESSAGES.AUTO_MODE : ASSIGN_RULE_MESSAGES.MANUAL_MODE;
    
    const confirmMessage = ASSIGN_RULE_MESSAGES.CONFIRM_MODE_CHANGE.replace("{mode}", modeText);
    
    const promise = $c.win.confirm(confirmMessage);
    promise.then(function(result) {
        if (result) {
            updateAutoAssignMode(newMode);
        }
    });
};

/**
 * 자동 배정 모드 업데이트
 * @param {string} newMode - 새로운 모드 ("true" 또는 "false")
 */
function updateAutoAssignMode(newMode) {
    dmp_autoAssignConfig.set("autoAssignEnabled", newMode);
    $c.sbm.execute($p, sbm_updateAutoAssignConfig);
}

/**
 * 자동 배정 설정 업데이트 완료 콜백
 * 성공/실패에 따른 메시지 표시 및 UI 업데이트
 */
scwin.sbm_updateAutoAssignConfig_submitdone = function(e) {
    const { elHeader } = e.responseJSON;
    
    if (!isValidResponse(elHeader)) {
        const errorMessage = formatErrorMessage(elHeader);
        $c.win.alert(errorMessage);
        return false;
    }
    
    $c.win.alert(ASSIGN_RULE_MESSAGES.SUCCESS_CONFIG_UPDATE);
    scwin.updateAutoAssignUI();
};

// =============================================================================
// 배정 규칙 조회 및 페이징 관리
// =============================================================================

/**
 * 배정 규칙 조회 버튼 클릭 이벤트
 * 페이지를 첫 번째로 초기화하고 조회 실행
 */
scwin.btn_search_onclick = function(e) {
    scwin.searchAssignRules();
};

/**
 * 배정 규칙 검색 실행
 * 페이지 번호 초기화 후 서버 조회
 */
scwin.searchAssignRules = function() {
    resetPagination();
    $c.sbm.execute($p, sbm_selectAssignRuleVoList);
};

/**
 * 페이징 정보 초기화
 * 첫 번째 페이지로 설정
 */
function resetPagination() {
    dmp_assignRuleVo.set("pageIndex", ASSIGN_RULE_CONFIG.DEFAULT_PAGE_INDEX.toString());
    
    const pageList = $p.getComponentById(UI_ELEMENTS.COMPONENTS.PAGE_LIST);
    if (pageList) {
        pageList.setSelectedIndex(ASSIGN_RULE_CONFIG.DEFAULT_PAGE_INDEX);
    }
}

/**
 * 배정 규칙 목록 조회 완료 콜백
 * 조회 결과를 그리드에 표시하고 페이징 정보 업데이트
 */
scwin.sbm_assignRuleList_submitdone = function(e) {
    const { elData, elHeader } = e.responseJSON;
    
    if (!isValidResponse(elHeader)) {
        const errorMessage = formatErrorMessage(elHeader);
        $c.win.alert(errorMessage);
        return false;
    }
    
    // 폼 초기화 및 UI 상태 설정
    initializeFormForNewEntry();
    
    // 그리드 데이터 설정
    updateGridData(elData);
    
    // 페이징 정보 업데이트
    updatePaginationInfo(elData);
};

/**
 * 신규 등록을 위한 폼 초기화
 * 상세 정보 폼을 비우고 등록 모드로 설정
 */
function initializeFormForNewEntry() {
    // 상세 정보 초기화
    dmp_assignRuleVoDetail.setEmptyValue();
    
    // 폼을 편집 가능 상태로 설정
    const ruleInfoGroup = $p.getComponentById(UI_ELEMENTS.COMPONENTS.RULE_INFO_GROUP);
    if (ruleInfoGroup) {
        ruleInfoGroup.setReadOnly(false);
    }
    
    // 등록 모드 UI 설정
    setButtonVisibility(true, false, false); // save=true, edit=false, delete=false
    setRegisterFlag(ASSIGN_RULE_MESSAGES.REGISTER_MODE);
}

/**
 * 등록/수정 플래그 설정
 * @param {string} flagText - 표시할 텍스트
 */
function setRegisterFlag(flagText) {
    const flagSpan = $p.getComponentById(UI_ELEMENTS.COMPONENTS.REGISTER_FLAG_SPAN);
    if (flagSpan) {
        flagSpan.setValue(flagText);
    }
}

/**
 * 그리드 데이터 업데이트
 * @param {Object} elData - 서버 응답 데이터
 */
function updateGridData(elData) {
    // 총 레코드 수 표시
    const listCountSpan = $p.getComponentById(UI_ELEMENTS.COMPONENTS.LIST_COUNT_SPAN);
    if (listCountSpan && elData.totalCount !== undefined) {
        listCountSpan.setLabel(elData.totalCount.toString());
    }
    
    // 그리드에 데이터 설정
    if (elData.assignRuleVoList) {
        dlt_assignRuleVoList.setJSON(elData.assignRuleVoList);
    }
}

/**
 * 페이징 정보 업데이트
 * @param {Object} elData - 서버 응답 데이터
 */
function updatePaginationInfo(elData) {
    const pageSize = parseInt(dmp_assignRuleVo.get("pageSize")) || ASSIGN_RULE_CONFIG.PAGE_SIZE;
    const totalPageCount = Math.ceil((elData.totalCount || 0) / pageSize);
    const currentPageIndex = parseInt(dmp_assignRuleVo.get("pageIndex")) || ASSIGN_RULE_CONFIG.DEFAULT_PAGE_INDEX;
    
    // 페이지 네비게이터 업데이트
    const pageList = $p.getComponentById(UI_ELEMENTS.COMPONENTS.PAGE_LIST);
    if (pageList) {
        pageList.setCount(totalPageCount);
        pageList.setSelectedIndex(currentPageIndex);
    }
    
    // 페이지 정보 표시 업데이트
    updatePageInfoDisplay(totalPageCount, currentPageIndex);
}

/**
 * 페이지 정보 표시 업데이트
 * @param {number} totalPageCount - 전체 페이지 수
 * @param {number} currentPageIndex - 현재 페이지 번호
 */
function updatePageInfoDisplay(totalPageCount, currentPageIndex) {
    const totalPageSpan = $p.getComponentById(UI_ELEMENTS.COMPONENTS.TOTAL_PAGE_COUNT_SPAN);
    const pageIndexSpan = $p.getComponentById(UI_ELEMENTS.COMPONENTS.PAGE_INDEX_SPAN);
    
    if (totalPageSpan) {
        totalPageSpan.setValue(totalPageCount.toString());
    }
    
    if (pageIndexSpan) {
        pageIndexSpan.setValue(currentPageIndex.toString());
    }
}

/**
 * 페이지 번호 클릭 이벤트
 * 선택된 페이지로 이동하여 데이터 조회
 * @param {number} pageIndex - 선택된 페이지 번호
 */
scwin.pgl_assignRuleList_onclick = function(pageIndex) {
    navigateToPage(pageIndex);
};

/**
 * 지정된 페이지로 이동
 * @param {number} pageIndex - 이동할 페이지 번호
 */
function navigateToPage(pageIndex) {
    dmp_assignRuleVo.set("pageIndex", pageIndex.toString());
    $c.sbm.execute($p, sbm_selectAssignRuleVoList);
}

// =============================================================================
// 그리드 및 폼 관리
// =============================================================================

/**
 * 그리드 셀 클릭 이벤트
 * 선택된 행의 데이터를 상세 폼에 로드하고 수정 모드로 전환
 * @param {number} row - 클릭된 행 번호
 * @param {number} col - 클릭된 열 번호
 * @param {string} colId - 클릭된 열 ID
 */
scwin.grd_list_oncellclick = function(row, col, colId) {
    loadRowDataToForm(row);
    switchToEditMode();
};

/**
 * 선택된 행 데이터를 폼에 로드
 * @param {number} row - 행 번호
 */
function loadRowDataToForm(row) {
    const rowData = dlt_assignRuleVoList.getRowJSON(row);
    dmp_assignRuleVoDetail.setJSON(rowData);
}

/**
 * 수정 모드로 전환
 * 수정/삭제 버튼 표시 및 저장 버튼 숨김
 */
function switchToEditMode() {
    setButtonVisibility(false, true, true); // save=false, edit=true, delete=true
    setRegisterFlag(ASSIGN_RULE_MESSAGES.EDIT_MODE);
}

/**
 * 초기화 버튼 클릭 이벤트
 * 폼을 비우고 등록 모드로 전환
 */
scwin.btn_reset_onclick = function(e) {
    initializeFormForNewEntry();
};

// =============================================================================
// 배정 규칙 CRUD 작업
// =============================================================================

/**
 * 저장 버튼 클릭 이벤트 (신규 등록)
 * 유효성 검증 후 저장 확인 메시지 표시
 */
scwin.btn_save_onclick = function(e) {
    if (validateRequiredFields()) {
        showConfirmDialog(ASSIGN_RULE_MESSAGES.CONFIRM_SAVE, function() {
            $c.sbm.execute(sbm_insertAssignRuleVo);
        });
    }
};

/**
 * 수정 버튼 클릭 이벤트
 * 유효성 검증 후 수정 확인 메시지 표시
 */
scwin.btn_edit_onclick = function(e) {
    if (validateRequiredFields()) {
        showConfirmDialog(ASSIGN_RULE_MESSAGES.CONFIRM_UPDATE, function() {
            $c.sbm.execute(sbm_updateAssignRuleVo);
        });
    }
};

/**
 * 삭제 버튼 클릭 이벤트
 * 유효성 검증 후 삭제 확인 메시지 표시
 */
scwin.btn_delete_onclick = function(e) {
    if (validateRequiredFields()) {
        showConfirmDialog(ASSIGN_RULE_MESSAGES.CONFIRM_DELETE, function() {
            $c.sbm.execute(sbm_deleteAssignRuleVo);
        });
    }
};

/**
 * 필수 필드 유효성 검증
 * @returns {boolean} 유효성 검증 결과
 */
function validateRequiredFields() {
    const validationInfo = [
        { id: "rule_id", mandatory: true }
    ];
    
    const ruleInfoGroup = $p.getComponentById(UI_ELEMENTS.COMPONENTS.RULE_INFO_GROUP);
    return $c.data.validateGroup(ruleInfoGroup, validationInfo) === true;
}

/**
 * 확인 대화상자 표시
 * @param {string} message - 확인 메시지
 * @param {Function} callback - 확인 시 실행할 콜백 함수
 */
function showConfirmDialog(message, callback) {
    const promise = $c.win.confirm(message);
    promise.then(function(result) {
        if (result && typeof callback === 'function') {
            callback();
        }
    });
}

// =============================================================================
// CRUD 작업 완료 콜백 함수들
// =============================================================================

/**
 * 규칙 등록 완료 콜백
 * 성공/실패 메시지 표시 후 목록 재조회
 */
scwin.sbm_insertAssignRuleVo_submitdone = function(e) {
    const { elHeader } = e.responseJSON;
    
    if (!isValidResponse(elHeader)) {
        const errorMessage = formatErrorMessage(elHeader);
        $c.win.alert(errorMessage);
        return false;
    }
    
    $c.win.alert(ASSIGN_RULE_MESSAGES.SUCCESS_REGISTER);
    scwin.searchAssignRules();
};

/**
 * 규칙 수정 완료 콜백
 * 성공/실패 메시지 표시 후 목록 재조회
 */
scwin.sbm_updateAssignRuleVo_submitdone = function(e) {
    const { elHeader } = e.responseJSON;
    
    if (!isValidResponse(elHeader)) {
        const errorMessage = formatErrorMessage(elHeader);
        $c.win.alert(errorMessage);
        return false;
    }
    
    $c.win.alert(ASSIGN_RULE_MESSAGES.SUCCESS_UPDATE);
    scwin.searchAssignRules();
};

/**
 * 규칙 삭제 완료 콜백
 * 성공/실패 메시지 표시 후 목록 재조회
 */
scwin.sbm_deleteAssignRuleVo_submitdone = function(e) {
    const { elHeader } = e.responseJSON;
    
    if (!isValidResponse(elHeader)) {
        const errorMessage = formatErrorMessage(elHeader);
        $c.win.alert(errorMessage);
        return false;
    }
    
    $c.win.alert(ASSIGN_RULE_MESSAGES.SUCCESS_DELETE);
    scwin.searchAssignRules();
};

// =============================================================================
// 유틸리티 함수
// =============================================================================

/**
 * 서버 응답 유효성 검증
 * @param {Object} elHeader - 응답 헤더
 * @returns {boolean} 유효성 여부
 */
function isValidResponse(elHeader) {
    return elHeader && 
           elHeader !== "" && 
           elHeader !== "undefined" && 
           elHeader.resSuc !== false;
}

/**
 * 에러 메시지 포맷팅
 * @param {Object} elHeader - 응답 헤더
 * @returns {string} 포맷된 에러 메시지
 */
function formatErrorMessage(elHeader) {
    const code = elHeader?.resCode || "N/A";
    const message = elHeader?.resMsg || "알 수 없는 오류";
    
    return ASSIGN_RULE_MESSAGES.ERROR_TEMPLATE
        .replace("{code}", code)
        .replace("{message}", message);
}

]]></script>
	</head>
	<body ev:onpageload="scwin.onpageload">
		<xf:group class="sub_contents " id="" style="">
			<xf:group class="pgtbox" id="" style="">
				<w2:textbox class="pgt_tit" id="" label="자동배정 설정" style="" tagname="" />
			</xf:group>
			
			<!-- 현재 적용 중인 자동 배정 규칙 영역 -->
			<xf:group class="titbox" id="" style="">
				<xf:group id="" tagname="h3" style="">
					<w2:textbox class="" id="" label="현재 적용 중인 자동 배정 규칙" style=""></w2:textbox>
				</xf:group>
			</xf:group>
			<xf:group class="tblbox" id="" style="margin-bottom: 20px;">
				<xf:group adaptive="layout" adaptiveThreshold="600" class="w2tb tbl" id="" style="" tagname="table">
					<w2:attributes>
						<w2:summary />
					</w2:attributes>
					<xf:group tagname="colgroup">
						<xf:group style="width:150px;" tagname="col" />
						<xf:group style="" tagname="col" />
					</xf:group>
					<xf:group style="" tagname="tr">
						<xf:group class="w2tb_th" style="" tagname="th">
				<w2:textbox class="" id="" label="키워드 : &quot;검보법&quot;, &quot;손해&quot;, &quot;의료비&quot;" ref="" style="" userData2=""/>

                            
						</xf:group>
						<xf:group class="w2tb_td" style="" tagname="td">
							<w2:textbox class="" id="" label="의료비 접수 실무자에게 자동 배정" style="color: #333; font-weight: normal;"/>
						</xf:group>
					</xf:group>
					<xf:group style="" tagname="tr">
						<xf:group class="w2tb_th" style="" tagname="th">
							<w2:textbox class="" id="" label="키워드 : &quot;입원,&quot;수술" ref="" style="" userData2=""/>

						</xf:group>
						<xf:group class="w2tb_td" style="" tagname="td">
							<w2:textbox class="" id="" label="의료비 접수 실무자에게 자동 배정" style="color: #333; font-weight: normal;"/>
						</xf:group>
					</xf:group>
				</xf:group>
			</xf:group>
			
			<!-- 자동 배정 모드 토글 섹션 -->
			<xf:group class="titbox" id="" style="">
				<xf:group id="" tagname="h3" style="">
					<w2:textbox class="" id="" label="자동 배정 모드" style=""></w2:textbox>
				</xf:group>
				<xf:group class="rt" id="" style="">
					<w2:span id="spn_autoAssignMode" label="수동" style="margin-right: 10px; padding: 5px 10px; border-radius: 4px; font-weight: bold;" class="status-manual"/>
					<xf:trigger class="btn_cm toggle" id="btn_toggleAutoAssign" style="background-color: #28a745; color: white; padding: 8px 16px; border: none; border-radius: 4px;" type="button" ev:onclick="scwin.btn_toggleAutoAssign_onclick">
						<xf:label><![CDATA[모드 변경]]></xf:label>
					</xf:trigger>
				</xf:group>
			</xf:group>
			
			<!-- 새 규칙 추가 버튼 -->
			<xf:group class="btn_group" id="" style="text-align: center; margin-bottom: 20px;">
				<xf:trigger class="btn_cm add" id="btn_addRule" style="background-color: #4a90e2; color: white; padding: 8px 20px; border: none; border-radius: 4px;" type="button">
					<xf:label><![CDATA[새 규칙 추가]]></xf:label>
				</xf:trigger>
			</xf:group>

			<xf:group class="schbox" id="search_box" style="">
				<xf:group class="schbox_inner" id="" style="">
					<xf:group adaptive="layout" adaptiveThreshold="1200" class="w2tb tbl" id="" style="width:Infinity%;" tagname="table">
						<w2:attributes>
							<w2:summary />
						</w2:attributes>
						<xf:group tagname="colgroup">
						</xf:group>
						<xf:group class="" id="" style="" tagname="tr">
							<xf:group class="" id="" style="" tagname="tr">
							</xf:group>
						</xf:group>
					</xf:group>
				</xf:group>
				<xf:group class="btn_schbox" id="" style="">
					<xf:trigger class="btn_cm sch" disabled="" escape="false" id="btn_search" style="" type="button" ev:onclick="scwin.btn_search_onclick" localeRef="COMMON_BUTTON_00001">
						<xf:label><![CDATA[조회]]></xf:label>
					</xf:trigger>
				</xf:group>
			</xf:group>

			<!-- 배정규칙 목록 영역 -->
			<xf:group class="titbox" id="" style="">
				<xf:group class="count" id="">
					<w2:span id="" label="총" localeRef="COMMON_LABEL_00002" style=""></w2:span>
    				<w2:span class="num" id="spn_listCnt" label="0" ref="" style=""></w2:span>
    				<w2:span id="" label="건" localeRef="COMMON_LABEL_00003" style=""></w2:span>
    			</xf:group>
			</xf:group>
			<xf:group adaptiveThreshold="" class="gvwbox" id="" style="">
				<w2:gridView autoFit="allColumn" checkReadOnlyOnPasteEnable="" class="gvw" dataList="data:dlt_assignRuleVoList"
					defaultCellHeight="26" focusMode="row" id="grd_list" scrollByColumn="false" scrollByColumnAdaptive="false" style="height: 150px;"
					visibleRowNum="10" ev:oncellclick="scwin.grd_list_oncellclick" readOnly="true">
					<w2:caption style="" id="caption2" value="this is a grid caption."></w2:caption>
					<w2:header style="" id="header2">
						<w2:row style="" id="row3">
							<w2:column width="70" inputType="text" style="" id="column1" value="rule_id" displayMode="label" localeRef="AssignRule_COLNAME_00001"></w2:column>
                            <w2:column width="70" inputType="text" style="" id="column2" value="keyword" displayMode="label" localeRef="AssignRule_COLNAME_00002"></w2:column>
                            <w2:column width="70" inputType="text" style="" id="column3" value="dept" displayMode="label" localeRef="AssignRule_COLNAME_00003"></w2:column>
						</w2:row>
					</w2:header>
					<w2:gBody style="" id="gBody2">
						<w2:row style="" id="row4">
							<w2:column width="70" inputType="text" style="" id="rule_id" value="" displayMode="label"></w2:column>
                            <w2:column width="70" inputType="text" style="" id="keyword" value="" displayMode="label"></w2:column>
                            <w2:column width="70" inputType="text" style="" id="dept" value="" displayMode="label"></w2:column>
						</w2:row>
					</w2:gBody>
				</w2:gridView>
			</xf:group>
			<xf:group class="pglbox" id="" style="">
				<w2:pageList class="pgl" displayButtonType="display" displayFormat="#" id="pgl_assignRuleList" pageSize="5" pagingType="0"
					style="" ev:onclick="scwin.pgl_assignRuleList_onclick">
				</w2:pageList>	
				<xf:group class="pgl_count" id="" style="display: none;">
    				<w2:span class="num" id="spn_pageIndex" label="0" ref="data:dma_assignRuleVo.pageIndex" style=""></w2:span>
    				<w2:span id="span1" label="/" style=""></w2:span>
    				<w2:span id="spn_totalPageCount" label="0" ref="data:dma_assignRuleVo.totalPageCount" style=""></w2:span>
    				<w2:span id="span2" label="페이지" localeRef="COMMON_LABEL_00005" style=""></w2:span>
    			</xf:group>		
			</xf:group>
			<xf:group class="titbox" id="" style="">
                <xf:group id="" tagname="h3" style="">
    				<w2:textbox class="" id="" label="배정규칙" localeRef="" style=""></w2:textbox>
    				<w2:textbox class="" id="" label="(" style=""></w2:textbox>
    				<w2:textbox class="" id="spn_registerFlag" label="등록" localeRef="COMMON_LABEL_00006" style=""></w2:textbox>
    				<w2:textbox class="" id="" label=")" style=""></w2:textbox>
    			</xf:group>

				<xf:group class="rt" id="" style="">
					<xf:trigger class="btn_cm refresh" id="btn_reset" style="" type="button" localeRef="COMMON_BUTTON_00002"
	    					ev:onclick="scwin.btn_reset_onclick">
	    					<xf:label><![CDATA[초기화]]></xf:label>
					</xf:trigger>
					<xf:trigger class="btn_cm save" id="btn_save" style="" type="button" localeRef="COMMON_BUTTON_00003" ev:onclick="scwin.btn_save_onclick">
	    					<xf:label><![CDATA[저장]]></xf:label>
					</xf:trigger>
					<xf:trigger class="btn_cm save" id="btn_edit" style="" type="button" localeRef="COMMON_BUTTON_00003" ev:onclick="scwin.btn_edit_onclick">
						<xf:label><![CDATA[저장]]></xf:label>
					</xf:trigger>
					<xf:trigger class="btn_cm delete" ev:onclick="scwin.btn_delete_onclick" id="btn_delete" localeRef="COMMON_BUTTON_00004"
						style="" type="button">
						<xf:label><![CDATA[삭제]]></xf:label>
					</xf:trigger>
				</xf:group>
			</xf:group>
			<xf:group class="tblbox" id="grp_assignRuleInfo" style="">
				<xf:group adaptive="layout" adaptiveThreshold="600" class="w2tb tbl" id="" style="" tagname="table">
					<w2:attributes>
						<w2:summary />
					</w2:attributes>
					<xf:group tagname="colgroup">
						<xf:group style="width:150px;" tagname="col" />
						<xf:group style="" tagname="col" />
						<xf:group style="width:150px;" tagname="col" />
						<xf:group style="" tagname="col" />
					</xf:group>
					<xf:group style="" tagname="tr">
						<xf:group class="w2tb_th" style="" tagname="th">
                            <w2:textbox class="" id="" label="rule_id" ref="" style="" userData2="" localeRef="AssignRule_COLNAME_00001"/>
                        </xf:group>
                        <xf:group class="w2tb_td" style="" tagname="td">
                            <xf:input class="" id="" placeholder="" style="width:100%;" ref="data:dmp_assignRuleVoDetail.rule_id"/>
                        </xf:group>
                        <xf:group class="w2tb_th" style="" tagname="th">
                            <w2:textbox class="" id="" label="keyword" ref="" style="" userData2="" localeRef="AssignRule_COLNAME_00002"/>
                        </xf:group>
                        <xf:group class="w2tb_td" style="" tagname="td">
                            <xf:input class="" id="" placeholder="" style="width:100%;" ref="data:dmp_assignRuleVoDetail.keyword"/>
                        </xf:group>
                    </xf:group>
                    <xf:group style="" tagname="tr">
                        <xf:group class="w2tb_th" style="" tagname="th">
                            <w2:textbox class="" id="" label="dept" ref="" style="" userData2="" localeRef="AssignRule_COLNAME_00003"/>
                        </xf:group>
                        <xf:group class="w2tb_td" style="" tagname="td">
                            <xf:input class="" id="" placeholder="" style="width:100%;" ref="data:dmp_assignRuleVoDetail.dept"/>
                        </xf:group>
                        <xf:group class="w2tb_th" style="" tagname="th">
                            <w2:textbox class="" id="" label="" ref="" style="" userData2="" />
                        </xf:group>
                        <xf:group class="w2tb_td" style="" tagname="td">
                        </xf:group>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		
		<!-- CSS for auto-assign mode styling -->
		<style>
			.status-auto {
				background-color: #28a745;
				color: white;
			}
			.status-manual {
				background-color: #6c757d;
				color: white;
			}
		</style>
	</body>
</html>
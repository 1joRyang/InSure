<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <w2:type>COMPONENT</w2:type>
        <w2:buildDate/>
        <w2:MSA/>
        <xf:model>
        	<w2:dataCollection baseNode="map">
        		<w2:dataMap baseNode="map" id="dma_claimNo">
        			<w2:keyInfo>
        				<w2:key dataType="text" name="claim_no" id="claim_no"></w2:key>
        			</w2:keyInfo>
        		</w2:dataMap>
        		<w2:dataMap baseNode="map" id="dma_returnReq">
        			<w2:keyInfo>
        				<w2:key dataType="text" name="claim_no" id="claim_no"></w2:key>
        				<w2:key dataType="text" name="return_memo" id="return_memo"></w2:key>
        				<w2:key dataType="text" name="request_date" id="request_date"></w2:key>
        				<w2:key dataType="text" name="completed_date" id="completed_date"></w2:key>
        			</w2:keyInfo>
        		</w2:dataMap>
        	</w2:dataCollection>
        	<w2:workflowCollection />
        	
        	<!-- 존재 여부 확인 submission -->
        	<xf:submission id="sbm_checkReturnReq" action="/InsWebApp/RETURNREQCheck.pwkjson" method="post"
        		mediatype="application/json" ref='data:json,{"id":"dma_claimNo","key":"returnReqVo"}' 
        		target="" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler=""
        		mode="asynchronous" processMsg="확인중입니다..." 
        		ev:submit="" ev:submitdone="scwin.sbm_checkReturnReq_submitdone" 
        		ev:submiterror="scwin.sbm_checkReturnReq_submiterror" abortTrigger="">
        	</xf:submission>
        	
        	<!-- INSERT 전용 submission -->
        	<xf:submission id="sbm_insertReturnReq" action="/InsWebApp/RETURNREQInsertOnly.pwkjson" method="post"
        		mediatype="application/json" ref='data:json,{"id":"dma_returnReq","key":"returnReqVo"}' 
        		target="" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler=""
        		mode="asynchronous" processMsg="등록중입니다..." 
        		ev:submit="" ev:submitdone="scwin.sbm_insertReturnReq_submitdone" 
        		ev:submiterror="scwin.sbm_insertReturnReq_submiterror" abortTrigger="">
        	</xf:submission>
        	
        	<!-- UPDATE 전용 submission -->
        	<xf:submission id="sbm_updateReturnReq" action="/InsWebApp/RETURNREQUpdateOnly.pwkjson" method="post"
        		mediatype="application/json" ref='data:json,{"id":"dma_returnReq","key":"returnReqVo"}' 
        		target="" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler=""
        		mode="asynchronous" processMsg="수정중입니다..." 
        		ev:submit="" ev:submitdone="scwin.sbm_updateReturnReq_submitdone" 
        		ev:submiterror="scwin.sbm_updateReturnReq_submiterror" abortTrigger="">
        	</xf:submission>
        </xf:model>
        <w2:layoutInfo/>
        <w2:publicInfo method=""/>
        <script lazy="false" type="text/javascript"><![CDATA[// SweetAlert2 설정 - z-index 문제 해결
const Toast = Swal.mixin({
    toast: true,
    showConfirmButton: false,
    customClass: {
        container: 'high-z-index-toast'
    },
    didOpen: () => {
        // SweetAlert2 컨테이너의 z-index를 매우 높게 설정
        const container = Swal.getContainer();
        if (container) {
            container.style.zIndex = '999999';
        }
    }
})

scwin.toastAlertMobile = (param) => {
    Toast.fire({
        ...param,
        timer: 2000,
        position: 'center',
        customClass: {
            container: 'high-z-index-alert'
        },
        timerProgressBar: false,
    });
}

scwin.toastAlert = (param) => {
    Toast.fire({
        ...param,
        timer: 3000,
        position: 'top-end',
        customClass: {
            container: 'high-z-index-alert'
        },
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });
}

scwin.noBtnAlert = (param) => {
    Swal.fire({
        ...param,
        showConfirmButton: false,
        customClass: {
            container: 'high-z-index-alert'
        },
        didOpen: () => {
            const container = Swal.getContainer();
            if (container) {
                container.style.zIndex = '999999';
            }
        }
    });
}

scwin.noBtnAlertWithTimer = (param) => {
    Swal.fire({
        ...param,
        timer: 2000,
        showConfirmButton: false,
        customClass: {
            container: 'high-z-index-alert'
        },
        didOpen: () => {
            const container = Swal.getContainer();
            if (container) {
                container.style.zIndex = '999999';
            }
        }
    });
}

scwin.twoBtnAlert = (param, func) => {
    Swal.fire({
        ...param,
        showCancelButton: true,
        confirmButtonColor: '#4FACFE',
        cancelButtonColor: '#d1d1d1',
        confirmButtonText: '완료',
        cancelButtonText: '취소',
        reverseButtons: true,
        customClass: {
            container: 'high-z-index-alert'
        },
        didOpen: () => {
            const container = Swal.getContainer();
            if (container) {
                container.style.zIndex = '999999';
            }
        }
    }).then(func);
}

// 페이지 로드 시
scwin.onpageload = function () {
    scwin.claim = JSON.parse(localStorage.getItem("claim"));

    txt_claim_no.setValue(scwin.claim.claimNo);
    dma_returnReq.set("claim_no", scwin.claim.claimNo);
    dma_claimNo.set("claim_no", scwin.claim.claimNo);
};

// 제출 버튼 클릭
scwin.btn_submit_onclick = function (e) {
    // textarea 값 검증
    var returnMemo = txa_additional_memo.getValue();
    if (!returnMemo || returnMemo.trim() === "") {
        scwin.toastAlert({
            icon: 'warning',
            title: '반송 사유를 입력해주세요.'
        });
        txa_additional_memo.focus();
        return false;
    }

    dma_returnReq.set("return_memo", returnMemo.trim());
    
    console.log("존재 여부 확인 중...");
    console.log("CLAIM_NO:", dma_claimNo.get("claim_no"));
    
    $p.executeSubmission("sbm_checkReturnReq");
};

// 닫기 버튼 클릭
scwin.btn_close_onclick = function (e) {
    $p.closePopup();
    return true;
};

// 반송 요청 확인 완료
scwin.sbm_checkReturnReq_submitdone = function (e) {
    var result = e.responseJSON;
    
    console.log("확인 결과:", result);
    
    if (result && result.success) {
        if (result.exists) {
            // 기존 데이터가 있으면 UPDATE
            console.log("기존 데이터 존재 - UPDATE 실행");
            $p.executeSubmission("sbm_updateReturnReq");
        } else {
            // 기존 데이터가 없으면 INSERT
            console.log("신규 데이터 - INSERT 실행");
            $p.executeSubmission("sbm_insertReturnReq");
        }
    } else {
        scwin.toastAlert({
            icon: 'error',
            title: '데이터 확인 중 오류가 발생했습니다.'
        });
    }
};

// 반송 요청 확인 에러
scwin.sbm_checkReturnReq_submiterror = function (e) {
    console.log("확인 중 에러:", e);
    scwin.toastAlert({
        icon: 'error',
        title: '데이터 확인 중 오류가 발생했습니다.'
    });
    return false;
};

// INSERT 완료

// INSERT 완료
scwin.sbm_insertReturnReq_submitdone = function (e) {
    var result = e.responseJSON;
    console.log("INSERT 결과:", result);
    
    if (result && result.success) {
        Swal.fire({
            icon: 'success',
            title: result.message,
            confirmButtonText: '확인',
            confirmButtonColor: '#4FACFE',
            allowOutsideClick: false,
            allowEscapeKey: false,
            customClass: {
                container: 'high-z-index-alert'
            },
            didOpen: () => {
                const container = Swal.getContainer();
                if (container) {
                    container.style.zIndex = '999999';
                }
            }
        }).then((result) => {
            if (result.isConfirmed) {
                scwin.closeAndRedirect();
            }
        });
    } else {
        scwin.toastAlert({
            icon: 'error',
            title: result.message || '등록 중 오류가 발생했습니다.'
        });
    }
    return true;
};

// INSERT 에러
scwin.sbm_insertReturnReq_submiterror = function (e) {
    console.log("등록 중 에러:", e);
    scwin.toastAlert({
        icon: 'error',
        title: '등록 중 오류가 발생했습니다.'
    });
    return false;
};

// UPDATE 완료
scwin.sbm_updateReturnReq_submitdone = function (e) {
    var result = e.responseJSON;
    console.log("UPDATE 결과:", result);
    
    if (result && result.success) {
        Swal.fire({
            icon: 'success',
            title: result.message,
            confirmButtonText: '확인',
            confirmButtonColor: '#4FACFE',
            allowOutsideClick: false,
            allowEscapeKey: false,
            customClass: {
                container: 'high-z-index-alert'
            },
            didOpen: () => {
                const container = Swal.getContainer();
                if (container) {
                    container.style.zIndex = '999999';
                }
            }
        }).then((result) => {
            if (result.isConfirmed) {
                scwin.closeAndRedirect();
            }
        });
    } else {
        scwin.toastAlert({
            icon: 'error',
            title: result.message || '수정 중 오류가 발생했습니다.'
        });
    }
    return true;
};

// UPDATE 에러
scwin.sbm_updateReturnReq_submiterror = function (e) {
    console.log("수정 중 에러:", e);
    scwin.toastAlert({
        icon: 'error',
        title: '수정 중 오류가 발생했습니다.'
    });
    return false;
};

// 팝업 닫기 및 페이지 이동
scwin.closeAndRedirect = function() {
    $p.closePopup();
    location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/webWrapper.xml";
};]]></script>
    </head>
    <body ev:onpageload="scwin.onpageload">
    	<xf:group class="sub_contents" id="" meta_snippetCategory="00_화면시작" meta_snippetKeyComponent="true" meta_snippetName="0_01 페이지시작"
    		style="">
    		<xf:group id="">
    			<w2:span id="" label="청구 번호 : " meta_snippetCategory="10_입력폼" meta_snippetKeyComponent="true"
    				meta_snippetName="10_16 출력텍스트" style="">
    			</w2:span>
    			<w2:span meta_snippetCategory="10_입력폼" meta_snippetName="10_16 출력텍스트" meta_snippetKeyComponent="true" style=""
    				id="txt_claim_no" label="출력텍스트입니다. ">
    			</w2:span>
    		</xf:group>
    		
    		<xf:textarea class="" id="txa_additional_memo" meta_snippetCategory="10_입력폼" meta_snippetKeyComponent="true"
    			meta_snippetName="10_09 Textarea_100per" placeholder="반송 사유를 입력해주세요" style="width:100%;height: 82px;">
    		</xf:textarea>
    		<xf:group class="btnbox" id="" meta_snippetCategory="08_버튼" meta_snippetKeyComponent="true" meta_snippetName="8_05 팝업전체제어버튼"
    			style="">
    			<xf:group class="rt" id="" style="">
    				<xf:trigger class="btn_cm " id="btn_close" style="" ev:onclick="scwin.btn_close_onclick" type="button">
    					<xf:label><![CDATA[닫기]]></xf:label>
    				</xf:trigger>
    				<xf:trigger class="btn_cm pt" id="btn_submit" style="" type="button" ev:onclick="scwin.btn_submit_onclick">
    					<xf:label><![CDATA[확인]]></xf:label>
    				</xf:trigger>
    			</xf:group>
    		</xf:group>
    	</xf:group>
    </body>
</html>
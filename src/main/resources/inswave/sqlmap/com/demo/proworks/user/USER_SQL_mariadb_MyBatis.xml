<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	@subject     : 사용자정보 관련 처리를 담당하는 Sql Mapper
	@description : 사용자정보 관련 처리를 담당하는 Sql Mapper
	@author      : 임소희
	@since       : 2025/07/01
	@modification
	===========================================================
	DATE              AUTHOR             DESC
	===========================================================
	2025/07/01              임소희             최초 생성
 -->
<mapper namespace="com.demo.proworks.user">

	<select id="selectPasswordByUserId" parameterType="String" resultType="String">
        SELECT 
               PW as pw
          FROM USER
         WHERE USER_ID = #{userId}
    </select>
    
    <update id="updateSimplePassword" parameterType="com.demo.proworks.user.vo.UserVo">
	    UPDATE USER
	       SET simple_pw = #{simplePw}
	     WHERE user_id = #{userId}
	</update>


    <insert id="insertUser" parameterType="com.demo.proworks.user.vo.UserVo">
    	<!-- 사용자정보를 등록한다. -->	
    		
        INSERT INTO USER   /* QueryID : com.demo.proworks.user.insertUser */
        ( 
            ID
            <if test="userId  != null"> , USER_ID   </if>
            <if test="pw       != null"> , PW        </if>
            <if test="simplePw!= null"> , SIMPLE_PW </if>
            <if test="rrn      != null"> , RRN       </if>
            <if test="userName!= null"> , USER_NAME </if>
            <if test="account  != null"> , ACCOUNT   </if>
        )
        VALUES  
        ( 
            #{id}
            <if test="userId  != null"> , #{userId}   </if>
            <if test="pw       != null"> , #{pw}        </if>
            <if test="simplePw!= null"> , #{simplePw} </if>
            <if test="rrn      != null"> , #{rrn}       </if>
            <if test="userName!= null"> , #{userName} </if>
            <if test="account  != null"> , #{account}   </if> 
        )          
    </insert>	
	
    <update id="updateUser" parameterType="com.demo.proworks.user.vo.UserVo">
    	<!-- 사용자정보를 갱신한다. -->
    	
        UPDATE USER    /* QueryID : com.demo.proworks.user.updateUser */      
      	  SET  
                ID        = #{id}               	                       
            <if test="userId  != null"> , USER_ID   = #{userId}   </if>
            <if test="pw       != null"> , PW        = #{pw}        </if>
            <if test="simplePw!= null"> , SIMPLE_PW = #{simplePw} </if>
            <if test="rrn      != null"> , RRN       = #{rrn}       </if>
            <if test="userName!= null"> , USER_NAME = #{userName} </if>
            <if test="account  != null"> , ACCOUNT   = #{account}   </if>                 
        WHERE   
                ID        = #{id}       
    </update>
	
    <delete id="deleteUser" parameterType="com.demo.proworks.user.vo.UserVo">
    	<!-- 사용자정보를 삭제한다. -->
    	
        DELETE FROM USER   /* QueryID : com.demo.proworks.user.deleteUser */ 
        WHERE   
                ID        = #{id}               
    </delete>
	
    <select id="selectUser" parameterType="com.demo.proworks.user.vo.UserVo" resultType="com.demo.proworks.user.vo.UserVo">
<!-- 사용자정보를 상세 조회한다. -->	
        SELECT     /* QueryID : com.demo.proworks.user.selectUser */
            ID as id, USER_ID as userId, PW as pw, SIMPLE_PW as simplePw, RRN as rrn, USER_NAME as userName, ACCOUNT as account, DEFAULT_BANK_CODE as default_bank_code, DEFAULT_BANK_NAME as default_bank_name
        FROM USER 
        WHERE 
                USER_ID        = #{userId}
</select>
	
    <select id="selectListUser" parameterType="com.demo.proworks.user.vo.UserVo" resultType="com.demo.proworks.user.vo.UserVo">
    	<!-- 사용자정보 목록을 조회한다. -->
           SELECT    /* QueryID : com.demo.proworks.user.selectListUser */
               ID as id, USER_ID as userId, PW as pw, SIMPLE_PW as simplePw, RRN as rrn, USER_NAME as userName, ACCOUNT as account		       
           FROM (
               SELECT  S.*, CEIL( (@ROWNUM:=@ROWNUM+1) / #{pageSize} ) AS PAGE
               FROM (				
                   SELECT 
                       *  		                  
                   FROM USER
                   WHERE  1=1    		
	     																														
               ) S, (SELECT @ROWNUM := 0) TMP
           ) A
            WHERE PAGE = #{pageIndex}
    </select>
	
    <select id="selectListCountUser" parameterType="com.demo.proworks.user.vo.UserVo" resultType="long">
    <!-- 사용자정보 목록의 카운트를 조회한다. -->
    
         SELECT    /* QueryID : com.demo.proworks.user.selectListCountUser */
             COUNT(*) totcnt  		                  
         FROM USER
         WHERE  1=1    		

    </select>
    
    <select id="selectUserById" parameterType="com.demo.proworks.user.vo.UserVo" resultType="com.demo.proworks.user.vo.UserVo">
	<!-- 계좌조회를 위해 채번된 id로 사용자정보를 상세 조회한다. -->	
        SELECT     /* QueryID : com.demo.proworks.user.selectUserById */
        ID as id,
        user_id as userId,
        user_name as userName,
        account,
        default_bank_code,
        default_bank_name
    FROM
        USER
    WHERE
        ID = #{id}
	</select>

</mapper>
